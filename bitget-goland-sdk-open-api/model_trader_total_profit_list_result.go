/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TraderTotalProfitListResult struct for TraderTotalProfitListResult
type TraderTotalProfitListResult struct {
	ProductCode          *string `json:"productCode,omitempty"`
	Profit               *string `json:"profit,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TraderTotalProfitListResult TraderTotalProfitListResult

// NewTraderTotalProfitListResult instantiates a new TraderTotalProfitListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTraderTotalProfitListResult() *TraderTotalProfitListResult {
	this := TraderTotalProfitListResult{}
	return &this
}

// NewTraderTotalProfitListResultWithDefaults instantiates a new TraderTotalProfitListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTraderTotalProfitListResultWithDefaults() *TraderTotalProfitListResult {
	this := TraderTotalProfitListResult{}
	return &this
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *TraderTotalProfitListResult) GetProductCode() string {
	if o == nil || isNil(o.ProductCode) {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraderTotalProfitListResult) GetProductCodeOk() (*string, bool) {
	if o == nil || isNil(o.ProductCode) {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *TraderTotalProfitListResult) HasProductCode() bool {
	if o != nil && !isNil(o.ProductCode) {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *TraderTotalProfitListResult) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetProfit returns the Profit field value if set, zero value otherwise.
func (o *TraderTotalProfitListResult) GetProfit() string {
	if o == nil || isNil(o.Profit) {
		var ret string
		return ret
	}
	return *o.Profit
}

// GetProfitOk returns a tuple with the Profit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraderTotalProfitListResult) GetProfitOk() (*string, bool) {
	if o == nil || isNil(o.Profit) {
		return nil, false
	}
	return o.Profit, true
}

// HasProfit returns a boolean if a field has been set.
func (o *TraderTotalProfitListResult) HasProfit() bool {
	if o != nil && !isNil(o.Profit) {
		return true
	}

	return false
}

// SetProfit gets a reference to the given string and assigns it to the Profit field.
func (o *TraderTotalProfitListResult) SetProfit(v string) {
	o.Profit = &v
}

func (o TraderTotalProfitListResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ProductCode) {
		toSerialize["productCode"] = o.ProductCode
	}
	if !isNil(o.Profit) {
		toSerialize["profit"] = o.Profit
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TraderTotalProfitListResult) UnmarshalJSON(bytes []byte) (err error) {
	varTraderTotalProfitListResult := _TraderTotalProfitListResult{}

	if err = json.Unmarshal(bytes, &varTraderTotalProfitListResult); err == nil {
		*o = TraderTotalProfitListResult(varTraderTotalProfitListResult)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "productCode")
		delete(additionalProperties, "profit")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTraderTotalProfitListResult struct {
	value *TraderTotalProfitListResult
	isSet bool
}

func (v NullableTraderTotalProfitListResult) Get() *TraderTotalProfitListResult {
	return v.value
}

func (v *NullableTraderTotalProfitListResult) Set(val *TraderTotalProfitListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTraderTotalProfitListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTraderTotalProfitListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTraderTotalProfitListResult(val *TraderTotalProfitListResult) *NullableTraderTotalProfitListResult {
	return &NullableTraderTotalProfitListResult{value: val, isSet: true}
}

func (v NullableTraderTotalProfitListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTraderTotalProfitListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
