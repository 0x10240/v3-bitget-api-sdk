/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateTpslRequest struct for UpdateTpslRequest
type UpdateTpslRequest struct {
	// stopLossPrice
	StopLossPrice string `json:"stopLossPrice"`
	// stopProfitPrice
	StopProfitPrice string `json:"stopProfitPrice"`
	// trackingNo
	TrackingNo           string `json:"trackingNo"`
	AdditionalProperties map[string]interface{}
}

type _UpdateTpslRequest UpdateTpslRequest

// NewUpdateTpslRequest instantiates a new UpdateTpslRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTpslRequest(stopLossPrice string, stopProfitPrice string, trackingNo string) *UpdateTpslRequest {
	this := UpdateTpslRequest{}
	this.StopLossPrice = stopLossPrice
	this.StopProfitPrice = stopProfitPrice
	this.TrackingNo = trackingNo
	return &this
}

// NewUpdateTpslRequestWithDefaults instantiates a new UpdateTpslRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTpslRequestWithDefaults() *UpdateTpslRequest {
	this := UpdateTpslRequest{}
	return &this
}

// GetStopLossPrice returns the StopLossPrice field value
func (o *UpdateTpslRequest) GetStopLossPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StopLossPrice
}

// GetStopLossPriceOk returns a tuple with the StopLossPrice field value
// and a boolean to check if the value has been set.
func (o *UpdateTpslRequest) GetStopLossPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StopLossPrice, true
}

// SetStopLossPrice sets field value
func (o *UpdateTpslRequest) SetStopLossPrice(v string) {
	o.StopLossPrice = v
}

// GetStopProfitPrice returns the StopProfitPrice field value
func (o *UpdateTpslRequest) GetStopProfitPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StopProfitPrice
}

// GetStopProfitPriceOk returns a tuple with the StopProfitPrice field value
// and a boolean to check if the value has been set.
func (o *UpdateTpslRequest) GetStopProfitPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StopProfitPrice, true
}

// SetStopProfitPrice sets field value
func (o *UpdateTpslRequest) SetStopProfitPrice(v string) {
	o.StopProfitPrice = v
}

// GetTrackingNo returns the TrackingNo field value
func (o *UpdateTpslRequest) GetTrackingNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrackingNo
}

// GetTrackingNoOk returns a tuple with the TrackingNo field value
// and a boolean to check if the value has been set.
func (o *UpdateTpslRequest) GetTrackingNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackingNo, true
}

// SetTrackingNo sets field value
func (o *UpdateTpslRequest) SetTrackingNo(v string) {
	o.TrackingNo = v
}

func (o UpdateTpslRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["stopLossPrice"] = o.StopLossPrice
	}
	if true {
		toSerialize["stopProfitPrice"] = o.StopProfitPrice
	}
	if true {
		toSerialize["trackingNo"] = o.TrackingNo
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *UpdateTpslRequest) UnmarshalJSON(bytes []byte) (err error) {
	varUpdateTpslRequest := _UpdateTpslRequest{}

	if err = json.Unmarshal(bytes, &varUpdateTpslRequest); err == nil {
		*o = UpdateTpslRequest(varUpdateTpslRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "stopLossPrice")
		delete(additionalProperties, "stopProfitPrice")
		delete(additionalProperties, "trackingNo")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateTpslRequest struct {
	value *UpdateTpslRequest
	isSet bool
}

func (v NullableUpdateTpslRequest) Get() *UpdateTpslRequest {
	return v.value
}

func (v *NullableUpdateTpslRequest) Set(val *UpdateTpslRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTpslRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTpslRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTpslRequest(val *UpdateTpslRequest) *NullableUpdateTpslRequest {
	return &NullableUpdateTpslRequest{value: val, isSet: true}
}

func (v NullableUpdateTpslRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTpslRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
