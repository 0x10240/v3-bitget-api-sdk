/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarginLoanInfo struct for MarginLoanInfo
type MarginLoanInfo struct {
	Amount               *string `json:"amount,omitempty"`
	Coin                 *string `json:"coin,omitempty"`
	Ctime                *string `json:"ctime,omitempty"`
	LoanId               *string `json:"loanId,omitempty"`
	Type                 *string `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MarginLoanInfo MarginLoanInfo

// NewMarginLoanInfo instantiates a new MarginLoanInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginLoanInfo() *MarginLoanInfo {
	this := MarginLoanInfo{}
	return &this
}

// NewMarginLoanInfoWithDefaults instantiates a new MarginLoanInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginLoanInfoWithDefaults() *MarginLoanInfo {
	this := MarginLoanInfo{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *MarginLoanInfo) GetAmount() string {
	if o == nil || isNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginLoanInfo) GetAmountOk() (*string, bool) {
	if o == nil || isNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *MarginLoanInfo) HasAmount() bool {
	if o != nil && !isNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *MarginLoanInfo) SetAmount(v string) {
	o.Amount = &v
}

// GetCoin returns the Coin field value if set, zero value otherwise.
func (o *MarginLoanInfo) GetCoin() string {
	if o == nil || isNil(o.Coin) {
		var ret string
		return ret
	}
	return *o.Coin
}

// GetCoinOk returns a tuple with the Coin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginLoanInfo) GetCoinOk() (*string, bool) {
	if o == nil || isNil(o.Coin) {
		return nil, false
	}
	return o.Coin, true
}

// HasCoin returns a boolean if a field has been set.
func (o *MarginLoanInfo) HasCoin() bool {
	if o != nil && !isNil(o.Coin) {
		return true
	}

	return false
}

// SetCoin gets a reference to the given string and assigns it to the Coin field.
func (o *MarginLoanInfo) SetCoin(v string) {
	o.Coin = &v
}

// GetCtime returns the Ctime field value if set, zero value otherwise.
func (o *MarginLoanInfo) GetCtime() string {
	if o == nil || isNil(o.Ctime) {
		var ret string
		return ret
	}
	return *o.Ctime
}

// GetCtimeOk returns a tuple with the Ctime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginLoanInfo) GetCtimeOk() (*string, bool) {
	if o == nil || isNil(o.Ctime) {
		return nil, false
	}
	return o.Ctime, true
}

// HasCtime returns a boolean if a field has been set.
func (o *MarginLoanInfo) HasCtime() bool {
	if o != nil && !isNil(o.Ctime) {
		return true
	}

	return false
}

// SetCtime gets a reference to the given string and assigns it to the Ctime field.
func (o *MarginLoanInfo) SetCtime(v string) {
	o.Ctime = &v
}

// GetLoanId returns the LoanId field value if set, zero value otherwise.
func (o *MarginLoanInfo) GetLoanId() string {
	if o == nil || isNil(o.LoanId) {
		var ret string
		return ret
	}
	return *o.LoanId
}

// GetLoanIdOk returns a tuple with the LoanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginLoanInfo) GetLoanIdOk() (*string, bool) {
	if o == nil || isNil(o.LoanId) {
		return nil, false
	}
	return o.LoanId, true
}

// HasLoanId returns a boolean if a field has been set.
func (o *MarginLoanInfo) HasLoanId() bool {
	if o != nil && !isNil(o.LoanId) {
		return true
	}

	return false
}

// SetLoanId gets a reference to the given string and assigns it to the LoanId field.
func (o *MarginLoanInfo) SetLoanId(v string) {
	o.LoanId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MarginLoanInfo) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginLoanInfo) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MarginLoanInfo) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MarginLoanInfo) SetType(v string) {
	o.Type = &v
}

func (o MarginLoanInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !isNil(o.Coin) {
		toSerialize["coin"] = o.Coin
	}
	if !isNil(o.Ctime) {
		toSerialize["ctime"] = o.Ctime
	}
	if !isNil(o.LoanId) {
		toSerialize["loanId"] = o.LoanId
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MarginLoanInfo) UnmarshalJSON(bytes []byte) (err error) {
	varMarginLoanInfo := _MarginLoanInfo{}

	if err = json.Unmarshal(bytes, &varMarginLoanInfo); err == nil {
		*o = MarginLoanInfo(varMarginLoanInfo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "amount")
		delete(additionalProperties, "coin")
		delete(additionalProperties, "ctime")
		delete(additionalProperties, "loanId")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMarginLoanInfo struct {
	value *MarginLoanInfo
	isSet bool
}

func (v NullableMarginLoanInfo) Get() *MarginLoanInfo {
	return v.value
}

func (v *NullableMarginLoanInfo) Set(val *MarginLoanInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginLoanInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginLoanInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginLoanInfo(val *MarginLoanInfo) *NullableMarginLoanInfo {
	return &NullableMarginLoanInfo{value: val, isSet: true}
}

func (v NullableMarginLoanInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginLoanInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
