/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProductCodeRequest struct for ProductCodeRequest
type ProductCodeRequest struct {
	// symbolIds
	SymbolIds            []string `json:"symbolIds"`
	AdditionalProperties map[string]interface{}
}

type _ProductCodeRequest ProductCodeRequest

// NewProductCodeRequest instantiates a new ProductCodeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductCodeRequest(symbolIds []string) *ProductCodeRequest {
	this := ProductCodeRequest{}
	this.SymbolIds = symbolIds
	return &this
}

// NewProductCodeRequestWithDefaults instantiates a new ProductCodeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductCodeRequestWithDefaults() *ProductCodeRequest {
	this := ProductCodeRequest{}
	return &this
}

// GetSymbolIds returns the SymbolIds field value
func (o *ProductCodeRequest) GetSymbolIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SymbolIds
}

// GetSymbolIdsOk returns a tuple with the SymbolIds field value
// and a boolean to check if the value has been set.
func (o *ProductCodeRequest) GetSymbolIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SymbolIds, true
}

// SetSymbolIds sets field value
func (o *ProductCodeRequest) SetSymbolIds(v []string) {
	o.SymbolIds = v
}

func (o ProductCodeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["symbolIds"] = o.SymbolIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProductCodeRequest) UnmarshalJSON(bytes []byte) (err error) {
	varProductCodeRequest := _ProductCodeRequest{}

	if err = json.Unmarshal(bytes, &varProductCodeRequest); err == nil {
		*o = ProductCodeRequest(varProductCodeRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "symbolIds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProductCodeRequest struct {
	value *ProductCodeRequest
	isSet bool
}

func (v NullableProductCodeRequest) Get() *ProductCodeRequest {
	return v.value
}

func (v *NullableProductCodeRequest) Set(val *ProductCodeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProductCodeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProductCodeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductCodeRequest(val *ProductCodeRequest) *NullableProductCodeRequest {
	return &NullableProductCodeRequest{value: val, isSet: true}
}

func (v NullableProductCodeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductCodeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
