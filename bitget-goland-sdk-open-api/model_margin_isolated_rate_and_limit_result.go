/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarginIsolatedRateAndLimitResult struct for MarginIsolatedRateAndLimitResult
type MarginIsolatedRateAndLimitResult struct {
	BaseBorrowAble           *bool                     `json:"baseBorrowAble,omitempty"`
	BaseCoin                 *string                   `json:"baseCoin,omitempty"`
	BaseDailyInterestRate    *string                   `json:"baseDailyInterestRate,omitempty"`
	BaseMaxBorrowableAmount  *string                   `json:"baseMaxBorrowableAmount,omitempty"`
	BaseTransferInAble       *bool                     `json:"baseTransferInAble,omitempty"`
	BaseVips                 []MarginIsolatedVipResult `json:"baseVips,omitempty"`
	BaseYearlyInterestRate   *string                   `json:"baseYearlyInterestRate,omitempty"`
	Leverage                 *string                   `json:"leverage,omitempty"`
	QuoteBorrowAble          *bool                     `json:"quoteBorrowAble,omitempty"`
	QuoteCoin                *string                   `json:"quoteCoin,omitempty"`
	QuoteDailyInterestRate   *string                   `json:"quoteDailyInterestRate,omitempty"`
	QuoteMaxBorrowableAmount *string                   `json:"quoteMaxBorrowableAmount,omitempty"`
	QuoteTransferInAble      *bool                     `json:"quoteTransferInAble,omitempty"`
	QuoteVips                []MarginIsolatedVipResult `json:"quoteVips,omitempty"`
	QuoteYearlyInterestRate  *string                   `json:"quoteYearlyInterestRate,omitempty"`
	Symbol                   *string                   `json:"symbol,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _MarginIsolatedRateAndLimitResult MarginIsolatedRateAndLimitResult

// NewMarginIsolatedRateAndLimitResult instantiates a new MarginIsolatedRateAndLimitResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginIsolatedRateAndLimitResult() *MarginIsolatedRateAndLimitResult {
	this := MarginIsolatedRateAndLimitResult{}
	return &this
}

// NewMarginIsolatedRateAndLimitResultWithDefaults instantiates a new MarginIsolatedRateAndLimitResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginIsolatedRateAndLimitResultWithDefaults() *MarginIsolatedRateAndLimitResult {
	this := MarginIsolatedRateAndLimitResult{}
	return &this
}

// GetBaseBorrowAble returns the BaseBorrowAble field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetBaseBorrowAble() bool {
	if o == nil || isNil(o.BaseBorrowAble) {
		var ret bool
		return ret
	}
	return *o.BaseBorrowAble
}

// GetBaseBorrowAbleOk returns a tuple with the BaseBorrowAble field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetBaseBorrowAbleOk() (*bool, bool) {
	if o == nil || isNil(o.BaseBorrowAble) {
		return nil, false
	}
	return o.BaseBorrowAble, true
}

// HasBaseBorrowAble returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasBaseBorrowAble() bool {
	if o != nil && !isNil(o.BaseBorrowAble) {
		return true
	}

	return false
}

// SetBaseBorrowAble gets a reference to the given bool and assigns it to the BaseBorrowAble field.
func (o *MarginIsolatedRateAndLimitResult) SetBaseBorrowAble(v bool) {
	o.BaseBorrowAble = &v
}

// GetBaseCoin returns the BaseCoin field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetBaseCoin() string {
	if o == nil || isNil(o.BaseCoin) {
		var ret string
		return ret
	}
	return *o.BaseCoin
}

// GetBaseCoinOk returns a tuple with the BaseCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetBaseCoinOk() (*string, bool) {
	if o == nil || isNil(o.BaseCoin) {
		return nil, false
	}
	return o.BaseCoin, true
}

// HasBaseCoin returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasBaseCoin() bool {
	if o != nil && !isNil(o.BaseCoin) {
		return true
	}

	return false
}

// SetBaseCoin gets a reference to the given string and assigns it to the BaseCoin field.
func (o *MarginIsolatedRateAndLimitResult) SetBaseCoin(v string) {
	o.BaseCoin = &v
}

// GetBaseDailyInterestRate returns the BaseDailyInterestRate field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetBaseDailyInterestRate() string {
	if o == nil || isNil(o.BaseDailyInterestRate) {
		var ret string
		return ret
	}
	return *o.BaseDailyInterestRate
}

// GetBaseDailyInterestRateOk returns a tuple with the BaseDailyInterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetBaseDailyInterestRateOk() (*string, bool) {
	if o == nil || isNil(o.BaseDailyInterestRate) {
		return nil, false
	}
	return o.BaseDailyInterestRate, true
}

// HasBaseDailyInterestRate returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasBaseDailyInterestRate() bool {
	if o != nil && !isNil(o.BaseDailyInterestRate) {
		return true
	}

	return false
}

// SetBaseDailyInterestRate gets a reference to the given string and assigns it to the BaseDailyInterestRate field.
func (o *MarginIsolatedRateAndLimitResult) SetBaseDailyInterestRate(v string) {
	o.BaseDailyInterestRate = &v
}

// GetBaseMaxBorrowableAmount returns the BaseMaxBorrowableAmount field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetBaseMaxBorrowableAmount() string {
	if o == nil || isNil(o.BaseMaxBorrowableAmount) {
		var ret string
		return ret
	}
	return *o.BaseMaxBorrowableAmount
}

// GetBaseMaxBorrowableAmountOk returns a tuple with the BaseMaxBorrowableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetBaseMaxBorrowableAmountOk() (*string, bool) {
	if o == nil || isNil(o.BaseMaxBorrowableAmount) {
		return nil, false
	}
	return o.BaseMaxBorrowableAmount, true
}

// HasBaseMaxBorrowableAmount returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasBaseMaxBorrowableAmount() bool {
	if o != nil && !isNil(o.BaseMaxBorrowableAmount) {
		return true
	}

	return false
}

// SetBaseMaxBorrowableAmount gets a reference to the given string and assigns it to the BaseMaxBorrowableAmount field.
func (o *MarginIsolatedRateAndLimitResult) SetBaseMaxBorrowableAmount(v string) {
	o.BaseMaxBorrowableAmount = &v
}

// GetBaseTransferInAble returns the BaseTransferInAble field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetBaseTransferInAble() bool {
	if o == nil || isNil(o.BaseTransferInAble) {
		var ret bool
		return ret
	}
	return *o.BaseTransferInAble
}

// GetBaseTransferInAbleOk returns a tuple with the BaseTransferInAble field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetBaseTransferInAbleOk() (*bool, bool) {
	if o == nil || isNil(o.BaseTransferInAble) {
		return nil, false
	}
	return o.BaseTransferInAble, true
}

// HasBaseTransferInAble returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasBaseTransferInAble() bool {
	if o != nil && !isNil(o.BaseTransferInAble) {
		return true
	}

	return false
}

// SetBaseTransferInAble gets a reference to the given bool and assigns it to the BaseTransferInAble field.
func (o *MarginIsolatedRateAndLimitResult) SetBaseTransferInAble(v bool) {
	o.BaseTransferInAble = &v
}

// GetBaseVips returns the BaseVips field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetBaseVips() []MarginIsolatedVipResult {
	if o == nil || isNil(o.BaseVips) {
		var ret []MarginIsolatedVipResult
		return ret
	}
	return o.BaseVips
}

// GetBaseVipsOk returns a tuple with the BaseVips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetBaseVipsOk() ([]MarginIsolatedVipResult, bool) {
	if o == nil || isNil(o.BaseVips) {
		return nil, false
	}
	return o.BaseVips, true
}

// HasBaseVips returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasBaseVips() bool {
	if o != nil && !isNil(o.BaseVips) {
		return true
	}

	return false
}

// SetBaseVips gets a reference to the given []MarginIsolatedVipResult and assigns it to the BaseVips field.
func (o *MarginIsolatedRateAndLimitResult) SetBaseVips(v []MarginIsolatedVipResult) {
	o.BaseVips = v
}

// GetBaseYearlyInterestRate returns the BaseYearlyInterestRate field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetBaseYearlyInterestRate() string {
	if o == nil || isNil(o.BaseYearlyInterestRate) {
		var ret string
		return ret
	}
	return *o.BaseYearlyInterestRate
}

// GetBaseYearlyInterestRateOk returns a tuple with the BaseYearlyInterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetBaseYearlyInterestRateOk() (*string, bool) {
	if o == nil || isNil(o.BaseYearlyInterestRate) {
		return nil, false
	}
	return o.BaseYearlyInterestRate, true
}

// HasBaseYearlyInterestRate returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasBaseYearlyInterestRate() bool {
	if o != nil && !isNil(o.BaseYearlyInterestRate) {
		return true
	}

	return false
}

// SetBaseYearlyInterestRate gets a reference to the given string and assigns it to the BaseYearlyInterestRate field.
func (o *MarginIsolatedRateAndLimitResult) SetBaseYearlyInterestRate(v string) {
	o.BaseYearlyInterestRate = &v
}

// GetLeverage returns the Leverage field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetLeverage() string {
	if o == nil || isNil(o.Leverage) {
		var ret string
		return ret
	}
	return *o.Leverage
}

// GetLeverageOk returns a tuple with the Leverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetLeverageOk() (*string, bool) {
	if o == nil || isNil(o.Leverage) {
		return nil, false
	}
	return o.Leverage, true
}

// HasLeverage returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasLeverage() bool {
	if o != nil && !isNil(o.Leverage) {
		return true
	}

	return false
}

// SetLeverage gets a reference to the given string and assigns it to the Leverage field.
func (o *MarginIsolatedRateAndLimitResult) SetLeverage(v string) {
	o.Leverage = &v
}

// GetQuoteBorrowAble returns the QuoteBorrowAble field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteBorrowAble() bool {
	if o == nil || isNil(o.QuoteBorrowAble) {
		var ret bool
		return ret
	}
	return *o.QuoteBorrowAble
}

// GetQuoteBorrowAbleOk returns a tuple with the QuoteBorrowAble field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteBorrowAbleOk() (*bool, bool) {
	if o == nil || isNil(o.QuoteBorrowAble) {
		return nil, false
	}
	return o.QuoteBorrowAble, true
}

// HasQuoteBorrowAble returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasQuoteBorrowAble() bool {
	if o != nil && !isNil(o.QuoteBorrowAble) {
		return true
	}

	return false
}

// SetQuoteBorrowAble gets a reference to the given bool and assigns it to the QuoteBorrowAble field.
func (o *MarginIsolatedRateAndLimitResult) SetQuoteBorrowAble(v bool) {
	o.QuoteBorrowAble = &v
}

// GetQuoteCoin returns the QuoteCoin field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteCoin() string {
	if o == nil || isNil(o.QuoteCoin) {
		var ret string
		return ret
	}
	return *o.QuoteCoin
}

// GetQuoteCoinOk returns a tuple with the QuoteCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteCoinOk() (*string, bool) {
	if o == nil || isNil(o.QuoteCoin) {
		return nil, false
	}
	return o.QuoteCoin, true
}

// HasQuoteCoin returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasQuoteCoin() bool {
	if o != nil && !isNil(o.QuoteCoin) {
		return true
	}

	return false
}

// SetQuoteCoin gets a reference to the given string and assigns it to the QuoteCoin field.
func (o *MarginIsolatedRateAndLimitResult) SetQuoteCoin(v string) {
	o.QuoteCoin = &v
}

// GetQuoteDailyInterestRate returns the QuoteDailyInterestRate field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteDailyInterestRate() string {
	if o == nil || isNil(o.QuoteDailyInterestRate) {
		var ret string
		return ret
	}
	return *o.QuoteDailyInterestRate
}

// GetQuoteDailyInterestRateOk returns a tuple with the QuoteDailyInterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteDailyInterestRateOk() (*string, bool) {
	if o == nil || isNil(o.QuoteDailyInterestRate) {
		return nil, false
	}
	return o.QuoteDailyInterestRate, true
}

// HasQuoteDailyInterestRate returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasQuoteDailyInterestRate() bool {
	if o != nil && !isNil(o.QuoteDailyInterestRate) {
		return true
	}

	return false
}

// SetQuoteDailyInterestRate gets a reference to the given string and assigns it to the QuoteDailyInterestRate field.
func (o *MarginIsolatedRateAndLimitResult) SetQuoteDailyInterestRate(v string) {
	o.QuoteDailyInterestRate = &v
}

// GetQuoteMaxBorrowableAmount returns the QuoteMaxBorrowableAmount field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteMaxBorrowableAmount() string {
	if o == nil || isNil(o.QuoteMaxBorrowableAmount) {
		var ret string
		return ret
	}
	return *o.QuoteMaxBorrowableAmount
}

// GetQuoteMaxBorrowableAmountOk returns a tuple with the QuoteMaxBorrowableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteMaxBorrowableAmountOk() (*string, bool) {
	if o == nil || isNil(o.QuoteMaxBorrowableAmount) {
		return nil, false
	}
	return o.QuoteMaxBorrowableAmount, true
}

// HasQuoteMaxBorrowableAmount returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasQuoteMaxBorrowableAmount() bool {
	if o != nil && !isNil(o.QuoteMaxBorrowableAmount) {
		return true
	}

	return false
}

// SetQuoteMaxBorrowableAmount gets a reference to the given string and assigns it to the QuoteMaxBorrowableAmount field.
func (o *MarginIsolatedRateAndLimitResult) SetQuoteMaxBorrowableAmount(v string) {
	o.QuoteMaxBorrowableAmount = &v
}

// GetQuoteTransferInAble returns the QuoteTransferInAble field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteTransferInAble() bool {
	if o == nil || isNil(o.QuoteTransferInAble) {
		var ret bool
		return ret
	}
	return *o.QuoteTransferInAble
}

// GetQuoteTransferInAbleOk returns a tuple with the QuoteTransferInAble field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteTransferInAbleOk() (*bool, bool) {
	if o == nil || isNil(o.QuoteTransferInAble) {
		return nil, false
	}
	return o.QuoteTransferInAble, true
}

// HasQuoteTransferInAble returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasQuoteTransferInAble() bool {
	if o != nil && !isNil(o.QuoteTransferInAble) {
		return true
	}

	return false
}

// SetQuoteTransferInAble gets a reference to the given bool and assigns it to the QuoteTransferInAble field.
func (o *MarginIsolatedRateAndLimitResult) SetQuoteTransferInAble(v bool) {
	o.QuoteTransferInAble = &v
}

// GetQuoteVips returns the QuoteVips field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteVips() []MarginIsolatedVipResult {
	if o == nil || isNil(o.QuoteVips) {
		var ret []MarginIsolatedVipResult
		return ret
	}
	return o.QuoteVips
}

// GetQuoteVipsOk returns a tuple with the QuoteVips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteVipsOk() ([]MarginIsolatedVipResult, bool) {
	if o == nil || isNil(o.QuoteVips) {
		return nil, false
	}
	return o.QuoteVips, true
}

// HasQuoteVips returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasQuoteVips() bool {
	if o != nil && !isNil(o.QuoteVips) {
		return true
	}

	return false
}

// SetQuoteVips gets a reference to the given []MarginIsolatedVipResult and assigns it to the QuoteVips field.
func (o *MarginIsolatedRateAndLimitResult) SetQuoteVips(v []MarginIsolatedVipResult) {
	o.QuoteVips = v
}

// GetQuoteYearlyInterestRate returns the QuoteYearlyInterestRate field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteYearlyInterestRate() string {
	if o == nil || isNil(o.QuoteYearlyInterestRate) {
		var ret string
		return ret
	}
	return *o.QuoteYearlyInterestRate
}

// GetQuoteYearlyInterestRateOk returns a tuple with the QuoteYearlyInterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetQuoteYearlyInterestRateOk() (*string, bool) {
	if o == nil || isNil(o.QuoteYearlyInterestRate) {
		return nil, false
	}
	return o.QuoteYearlyInterestRate, true
}

// HasQuoteYearlyInterestRate returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasQuoteYearlyInterestRate() bool {
	if o != nil && !isNil(o.QuoteYearlyInterestRate) {
		return true
	}

	return false
}

// SetQuoteYearlyInterestRate gets a reference to the given string and assigns it to the QuoteYearlyInterestRate field.
func (o *MarginIsolatedRateAndLimitResult) SetQuoteYearlyInterestRate(v string) {
	o.QuoteYearlyInterestRate = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *MarginIsolatedRateAndLimitResult) GetSymbol() string {
	if o == nil || isNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedRateAndLimitResult) GetSymbolOk() (*string, bool) {
	if o == nil || isNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *MarginIsolatedRateAndLimitResult) HasSymbol() bool {
	if o != nil && !isNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *MarginIsolatedRateAndLimitResult) SetSymbol(v string) {
	o.Symbol = &v
}

func (o MarginIsolatedRateAndLimitResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BaseBorrowAble) {
		toSerialize["baseBorrowAble"] = o.BaseBorrowAble
	}
	if !isNil(o.BaseCoin) {
		toSerialize["baseCoin"] = o.BaseCoin
	}
	if !isNil(o.BaseDailyInterestRate) {
		toSerialize["baseDailyInterestRate"] = o.BaseDailyInterestRate
	}
	if !isNil(o.BaseMaxBorrowableAmount) {
		toSerialize["baseMaxBorrowableAmount"] = o.BaseMaxBorrowableAmount
	}
	if !isNil(o.BaseTransferInAble) {
		toSerialize["baseTransferInAble"] = o.BaseTransferInAble
	}
	if !isNil(o.BaseVips) {
		toSerialize["baseVips"] = o.BaseVips
	}
	if !isNil(o.BaseYearlyInterestRate) {
		toSerialize["baseYearlyInterestRate"] = o.BaseYearlyInterestRate
	}
	if !isNil(o.Leverage) {
		toSerialize["leverage"] = o.Leverage
	}
	if !isNil(o.QuoteBorrowAble) {
		toSerialize["quoteBorrowAble"] = o.QuoteBorrowAble
	}
	if !isNil(o.QuoteCoin) {
		toSerialize["quoteCoin"] = o.QuoteCoin
	}
	if !isNil(o.QuoteDailyInterestRate) {
		toSerialize["quoteDailyInterestRate"] = o.QuoteDailyInterestRate
	}
	if !isNil(o.QuoteMaxBorrowableAmount) {
		toSerialize["quoteMaxBorrowableAmount"] = o.QuoteMaxBorrowableAmount
	}
	if !isNil(o.QuoteTransferInAble) {
		toSerialize["quoteTransferInAble"] = o.QuoteTransferInAble
	}
	if !isNil(o.QuoteVips) {
		toSerialize["quoteVips"] = o.QuoteVips
	}
	if !isNil(o.QuoteYearlyInterestRate) {
		toSerialize["quoteYearlyInterestRate"] = o.QuoteYearlyInterestRate
	}
	if !isNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MarginIsolatedRateAndLimitResult) UnmarshalJSON(bytes []byte) (err error) {
	varMarginIsolatedRateAndLimitResult := _MarginIsolatedRateAndLimitResult{}

	if err = json.Unmarshal(bytes, &varMarginIsolatedRateAndLimitResult); err == nil {
		*o = MarginIsolatedRateAndLimitResult(varMarginIsolatedRateAndLimitResult)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "baseBorrowAble")
		delete(additionalProperties, "baseCoin")
		delete(additionalProperties, "baseDailyInterestRate")
		delete(additionalProperties, "baseMaxBorrowableAmount")
		delete(additionalProperties, "baseTransferInAble")
		delete(additionalProperties, "baseVips")
		delete(additionalProperties, "baseYearlyInterestRate")
		delete(additionalProperties, "leverage")
		delete(additionalProperties, "quoteBorrowAble")
		delete(additionalProperties, "quoteCoin")
		delete(additionalProperties, "quoteDailyInterestRate")
		delete(additionalProperties, "quoteMaxBorrowableAmount")
		delete(additionalProperties, "quoteTransferInAble")
		delete(additionalProperties, "quoteVips")
		delete(additionalProperties, "quoteYearlyInterestRate")
		delete(additionalProperties, "symbol")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMarginIsolatedRateAndLimitResult struct {
	value *MarginIsolatedRateAndLimitResult
	isSet bool
}

func (v NullableMarginIsolatedRateAndLimitResult) Get() *MarginIsolatedRateAndLimitResult {
	return v.value
}

func (v *NullableMarginIsolatedRateAndLimitResult) Set(val *MarginIsolatedRateAndLimitResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginIsolatedRateAndLimitResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginIsolatedRateAndLimitResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginIsolatedRateAndLimitResult(val *MarginIsolatedRateAndLimitResult) *NullableMarginIsolatedRateAndLimitResult {
	return &NullableMarginIsolatedRateAndLimitResult{value: val, isSet: true}
}

func (v NullableMarginIsolatedRateAndLimitResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginIsolatedRateAndLimitResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
