/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MerchantOrderPaymentInfo struct for MerchantOrderPaymentInfo
type MerchantOrderPaymentInfo struct {
	PaymethodId          *string                  `json:"paymethodId,omitempty"`
	PaymethodInfo        []OrderPaymentDetailInfo `json:"paymethodInfo,omitempty"`
	PaymethodName        *string                  `json:"paymethodName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MerchantOrderPaymentInfo MerchantOrderPaymentInfo

// NewMerchantOrderPaymentInfo instantiates a new MerchantOrderPaymentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantOrderPaymentInfo() *MerchantOrderPaymentInfo {
	this := MerchantOrderPaymentInfo{}
	return &this
}

// NewMerchantOrderPaymentInfoWithDefaults instantiates a new MerchantOrderPaymentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantOrderPaymentInfoWithDefaults() *MerchantOrderPaymentInfo {
	this := MerchantOrderPaymentInfo{}
	return &this
}

// GetPaymethodId returns the PaymethodId field value if set, zero value otherwise.
func (o *MerchantOrderPaymentInfo) GetPaymethodId() string {
	if o == nil || isNil(o.PaymethodId) {
		var ret string
		return ret
	}
	return *o.PaymethodId
}

// GetPaymethodIdOk returns a tuple with the PaymethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderPaymentInfo) GetPaymethodIdOk() (*string, bool) {
	if o == nil || isNil(o.PaymethodId) {
		return nil, false
	}
	return o.PaymethodId, true
}

// HasPaymethodId returns a boolean if a field has been set.
func (o *MerchantOrderPaymentInfo) HasPaymethodId() bool {
	if o != nil && !isNil(o.PaymethodId) {
		return true
	}

	return false
}

// SetPaymethodId gets a reference to the given string and assigns it to the PaymethodId field.
func (o *MerchantOrderPaymentInfo) SetPaymethodId(v string) {
	o.PaymethodId = &v
}

// GetPaymethodInfo returns the PaymethodInfo field value if set, zero value otherwise.
func (o *MerchantOrderPaymentInfo) GetPaymethodInfo() []OrderPaymentDetailInfo {
	if o == nil || isNil(o.PaymethodInfo) {
		var ret []OrderPaymentDetailInfo
		return ret
	}
	return o.PaymethodInfo
}

// GetPaymethodInfoOk returns a tuple with the PaymethodInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderPaymentInfo) GetPaymethodInfoOk() ([]OrderPaymentDetailInfo, bool) {
	if o == nil || isNil(o.PaymethodInfo) {
		return nil, false
	}
	return o.PaymethodInfo, true
}

// HasPaymethodInfo returns a boolean if a field has been set.
func (o *MerchantOrderPaymentInfo) HasPaymethodInfo() bool {
	if o != nil && !isNil(o.PaymethodInfo) {
		return true
	}

	return false
}

// SetPaymethodInfo gets a reference to the given []OrderPaymentDetailInfo and assigns it to the PaymethodInfo field.
func (o *MerchantOrderPaymentInfo) SetPaymethodInfo(v []OrderPaymentDetailInfo) {
	o.PaymethodInfo = v
}

// GetPaymethodName returns the PaymethodName field value if set, zero value otherwise.
func (o *MerchantOrderPaymentInfo) GetPaymethodName() string {
	if o == nil || isNil(o.PaymethodName) {
		var ret string
		return ret
	}
	return *o.PaymethodName
}

// GetPaymethodNameOk returns a tuple with the PaymethodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderPaymentInfo) GetPaymethodNameOk() (*string, bool) {
	if o == nil || isNil(o.PaymethodName) {
		return nil, false
	}
	return o.PaymethodName, true
}

// HasPaymethodName returns a boolean if a field has been set.
func (o *MerchantOrderPaymentInfo) HasPaymethodName() bool {
	if o != nil && !isNil(o.PaymethodName) {
		return true
	}

	return false
}

// SetPaymethodName gets a reference to the given string and assigns it to the PaymethodName field.
func (o *MerchantOrderPaymentInfo) SetPaymethodName(v string) {
	o.PaymethodName = &v
}

func (o MerchantOrderPaymentInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PaymethodId) {
		toSerialize["paymethodId"] = o.PaymethodId
	}
	if !isNil(o.PaymethodInfo) {
		toSerialize["paymethodInfo"] = o.PaymethodInfo
	}
	if !isNil(o.PaymethodName) {
		toSerialize["paymethodName"] = o.PaymethodName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MerchantOrderPaymentInfo) UnmarshalJSON(bytes []byte) (err error) {
	varMerchantOrderPaymentInfo := _MerchantOrderPaymentInfo{}

	if err = json.Unmarshal(bytes, &varMerchantOrderPaymentInfo); err == nil {
		*o = MerchantOrderPaymentInfo(varMerchantOrderPaymentInfo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "paymethodId")
		delete(additionalProperties, "paymethodInfo")
		delete(additionalProperties, "paymethodName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMerchantOrderPaymentInfo struct {
	value *MerchantOrderPaymentInfo
	isSet bool
}

func (v NullableMerchantOrderPaymentInfo) Get() *MerchantOrderPaymentInfo {
	return v.value
}

func (v *NullableMerchantOrderPaymentInfo) Set(val *MerchantOrderPaymentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantOrderPaymentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantOrderPaymentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantOrderPaymentInfo(val *MerchantOrderPaymentInfo) *NullableMerchantOrderPaymentInfo {
	return &NullableMerchantOrderPaymentInfo{value: val, isSet: true}
}

func (v NullableMerchantOrderPaymentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantOrderPaymentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
