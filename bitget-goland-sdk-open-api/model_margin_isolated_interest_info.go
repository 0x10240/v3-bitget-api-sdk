/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarginIsolatedInterestInfo struct for MarginIsolatedInterestInfo
type MarginIsolatedInterestInfo struct {
	Amount               *string `json:"amount,omitempty"`
	Ctime                *string `json:"ctime,omitempty"`
	InterestCoin         *string `json:"interestCoin,omitempty"`
	InterestId           *string `json:"interestId,omitempty"`
	InterestRate         *string `json:"interestRate,omitempty"`
	LoanCoin             *string `json:"loanCoin,omitempty"`
	Symbol               *string `json:"symbol,omitempty"`
	Type                 *string `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MarginIsolatedInterestInfo MarginIsolatedInterestInfo

// NewMarginIsolatedInterestInfo instantiates a new MarginIsolatedInterestInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginIsolatedInterestInfo() *MarginIsolatedInterestInfo {
	this := MarginIsolatedInterestInfo{}
	return &this
}

// NewMarginIsolatedInterestInfoWithDefaults instantiates a new MarginIsolatedInterestInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginIsolatedInterestInfoWithDefaults() *MarginIsolatedInterestInfo {
	this := MarginIsolatedInterestInfo{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *MarginIsolatedInterestInfo) GetAmount() string {
	if o == nil || isNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedInterestInfo) GetAmountOk() (*string, bool) {
	if o == nil || isNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *MarginIsolatedInterestInfo) HasAmount() bool {
	if o != nil && !isNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *MarginIsolatedInterestInfo) SetAmount(v string) {
	o.Amount = &v
}

// GetCtime returns the Ctime field value if set, zero value otherwise.
func (o *MarginIsolatedInterestInfo) GetCtime() string {
	if o == nil || isNil(o.Ctime) {
		var ret string
		return ret
	}
	return *o.Ctime
}

// GetCtimeOk returns a tuple with the Ctime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedInterestInfo) GetCtimeOk() (*string, bool) {
	if o == nil || isNil(o.Ctime) {
		return nil, false
	}
	return o.Ctime, true
}

// HasCtime returns a boolean if a field has been set.
func (o *MarginIsolatedInterestInfo) HasCtime() bool {
	if o != nil && !isNil(o.Ctime) {
		return true
	}

	return false
}

// SetCtime gets a reference to the given string and assigns it to the Ctime field.
func (o *MarginIsolatedInterestInfo) SetCtime(v string) {
	o.Ctime = &v
}

// GetInterestCoin returns the InterestCoin field value if set, zero value otherwise.
func (o *MarginIsolatedInterestInfo) GetInterestCoin() string {
	if o == nil || isNil(o.InterestCoin) {
		var ret string
		return ret
	}
	return *o.InterestCoin
}

// GetInterestCoinOk returns a tuple with the InterestCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedInterestInfo) GetInterestCoinOk() (*string, bool) {
	if o == nil || isNil(o.InterestCoin) {
		return nil, false
	}
	return o.InterestCoin, true
}

// HasInterestCoin returns a boolean if a field has been set.
func (o *MarginIsolatedInterestInfo) HasInterestCoin() bool {
	if o != nil && !isNil(o.InterestCoin) {
		return true
	}

	return false
}

// SetInterestCoin gets a reference to the given string and assigns it to the InterestCoin field.
func (o *MarginIsolatedInterestInfo) SetInterestCoin(v string) {
	o.InterestCoin = &v
}

// GetInterestId returns the InterestId field value if set, zero value otherwise.
func (o *MarginIsolatedInterestInfo) GetInterestId() string {
	if o == nil || isNil(o.InterestId) {
		var ret string
		return ret
	}
	return *o.InterestId
}

// GetInterestIdOk returns a tuple with the InterestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedInterestInfo) GetInterestIdOk() (*string, bool) {
	if o == nil || isNil(o.InterestId) {
		return nil, false
	}
	return o.InterestId, true
}

// HasInterestId returns a boolean if a field has been set.
func (o *MarginIsolatedInterestInfo) HasInterestId() bool {
	if o != nil && !isNil(o.InterestId) {
		return true
	}

	return false
}

// SetInterestId gets a reference to the given string and assigns it to the InterestId field.
func (o *MarginIsolatedInterestInfo) SetInterestId(v string) {
	o.InterestId = &v
}

// GetInterestRate returns the InterestRate field value if set, zero value otherwise.
func (o *MarginIsolatedInterestInfo) GetInterestRate() string {
	if o == nil || isNil(o.InterestRate) {
		var ret string
		return ret
	}
	return *o.InterestRate
}

// GetInterestRateOk returns a tuple with the InterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedInterestInfo) GetInterestRateOk() (*string, bool) {
	if o == nil || isNil(o.InterestRate) {
		return nil, false
	}
	return o.InterestRate, true
}

// HasInterestRate returns a boolean if a field has been set.
func (o *MarginIsolatedInterestInfo) HasInterestRate() bool {
	if o != nil && !isNil(o.InterestRate) {
		return true
	}

	return false
}

// SetInterestRate gets a reference to the given string and assigns it to the InterestRate field.
func (o *MarginIsolatedInterestInfo) SetInterestRate(v string) {
	o.InterestRate = &v
}

// GetLoanCoin returns the LoanCoin field value if set, zero value otherwise.
func (o *MarginIsolatedInterestInfo) GetLoanCoin() string {
	if o == nil || isNil(o.LoanCoin) {
		var ret string
		return ret
	}
	return *o.LoanCoin
}

// GetLoanCoinOk returns a tuple with the LoanCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedInterestInfo) GetLoanCoinOk() (*string, bool) {
	if o == nil || isNil(o.LoanCoin) {
		return nil, false
	}
	return o.LoanCoin, true
}

// HasLoanCoin returns a boolean if a field has been set.
func (o *MarginIsolatedInterestInfo) HasLoanCoin() bool {
	if o != nil && !isNil(o.LoanCoin) {
		return true
	}

	return false
}

// SetLoanCoin gets a reference to the given string and assigns it to the LoanCoin field.
func (o *MarginIsolatedInterestInfo) SetLoanCoin(v string) {
	o.LoanCoin = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *MarginIsolatedInterestInfo) GetSymbol() string {
	if o == nil || isNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedInterestInfo) GetSymbolOk() (*string, bool) {
	if o == nil || isNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *MarginIsolatedInterestInfo) HasSymbol() bool {
	if o != nil && !isNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *MarginIsolatedInterestInfo) SetSymbol(v string) {
	o.Symbol = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MarginIsolatedInterestInfo) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedInterestInfo) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MarginIsolatedInterestInfo) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MarginIsolatedInterestInfo) SetType(v string) {
	o.Type = &v
}

func (o MarginIsolatedInterestInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !isNil(o.Ctime) {
		toSerialize["ctime"] = o.Ctime
	}
	if !isNil(o.InterestCoin) {
		toSerialize["interestCoin"] = o.InterestCoin
	}
	if !isNil(o.InterestId) {
		toSerialize["interestId"] = o.InterestId
	}
	if !isNil(o.InterestRate) {
		toSerialize["interestRate"] = o.InterestRate
	}
	if !isNil(o.LoanCoin) {
		toSerialize["loanCoin"] = o.LoanCoin
	}
	if !isNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MarginIsolatedInterestInfo) UnmarshalJSON(bytes []byte) (err error) {
	varMarginIsolatedInterestInfo := _MarginIsolatedInterestInfo{}

	if err = json.Unmarshal(bytes, &varMarginIsolatedInterestInfo); err == nil {
		*o = MarginIsolatedInterestInfo(varMarginIsolatedInterestInfo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "amount")
		delete(additionalProperties, "ctime")
		delete(additionalProperties, "interestCoin")
		delete(additionalProperties, "interestId")
		delete(additionalProperties, "interestRate")
		delete(additionalProperties, "loanCoin")
		delete(additionalProperties, "symbol")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMarginIsolatedInterestInfo struct {
	value *MarginIsolatedInterestInfo
	isSet bool
}

func (v NullableMarginIsolatedInterestInfo) Get() *MarginIsolatedInterestInfo {
	return v.value
}

func (v *NullableMarginIsolatedInterestInfo) Set(val *MarginIsolatedInterestInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginIsolatedInterestInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginIsolatedInterestInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginIsolatedInterestInfo(val *MarginIsolatedInterestInfo) *NullableMarginIsolatedInterestInfo {
	return &NullableMarginIsolatedInterestInfo{value: val, isSet: true}
}

func (v NullableMarginIsolatedInterestInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginIsolatedInterestInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
