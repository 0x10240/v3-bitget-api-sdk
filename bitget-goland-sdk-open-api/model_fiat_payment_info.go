/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FiatPaymentInfo struct for FiatPaymentInfo
type FiatPaymentInfo struct {
	PaymentId            *string                 `json:"paymentId,omitempty"`
	PaymentInfo          []FiatPaymentDetailInfo `json:"paymentInfo,omitempty"`
	PaymentMethod        *string                 `json:"paymentMethod,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FiatPaymentInfo FiatPaymentInfo

// NewFiatPaymentInfo instantiates a new FiatPaymentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiatPaymentInfo() *FiatPaymentInfo {
	this := FiatPaymentInfo{}
	return &this
}

// NewFiatPaymentInfoWithDefaults instantiates a new FiatPaymentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiatPaymentInfoWithDefaults() *FiatPaymentInfo {
	this := FiatPaymentInfo{}
	return &this
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *FiatPaymentInfo) GetPaymentId() string {
	if o == nil || isNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiatPaymentInfo) GetPaymentIdOk() (*string, bool) {
	if o == nil || isNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *FiatPaymentInfo) HasPaymentId() bool {
	if o != nil && !isNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *FiatPaymentInfo) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetPaymentInfo returns the PaymentInfo field value if set, zero value otherwise.
func (o *FiatPaymentInfo) GetPaymentInfo() []FiatPaymentDetailInfo {
	if o == nil || isNil(o.PaymentInfo) {
		var ret []FiatPaymentDetailInfo
		return ret
	}
	return o.PaymentInfo
}

// GetPaymentInfoOk returns a tuple with the PaymentInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiatPaymentInfo) GetPaymentInfoOk() ([]FiatPaymentDetailInfo, bool) {
	if o == nil || isNil(o.PaymentInfo) {
		return nil, false
	}
	return o.PaymentInfo, true
}

// HasPaymentInfo returns a boolean if a field has been set.
func (o *FiatPaymentInfo) HasPaymentInfo() bool {
	if o != nil && !isNil(o.PaymentInfo) {
		return true
	}

	return false
}

// SetPaymentInfo gets a reference to the given []FiatPaymentDetailInfo and assigns it to the PaymentInfo field.
func (o *FiatPaymentInfo) SetPaymentInfo(v []FiatPaymentDetailInfo) {
	o.PaymentInfo = v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *FiatPaymentInfo) GetPaymentMethod() string {
	if o == nil || isNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiatPaymentInfo) GetPaymentMethodOk() (*string, bool) {
	if o == nil || isNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *FiatPaymentInfo) HasPaymentMethod() bool {
	if o != nil && !isNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *FiatPaymentInfo) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

func (o FiatPaymentInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	if !isNil(o.PaymentInfo) {
		toSerialize["paymentInfo"] = o.PaymentInfo
	}
	if !isNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *FiatPaymentInfo) UnmarshalJSON(bytes []byte) (err error) {
	varFiatPaymentInfo := _FiatPaymentInfo{}

	if err = json.Unmarshal(bytes, &varFiatPaymentInfo); err == nil {
		*o = FiatPaymentInfo(varFiatPaymentInfo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "paymentId")
		delete(additionalProperties, "paymentInfo")
		delete(additionalProperties, "paymentMethod")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFiatPaymentInfo struct {
	value *FiatPaymentInfo
	isSet bool
}

func (v NullableFiatPaymentInfo) Get() *FiatPaymentInfo {
	return v.value
}

func (v *NullableFiatPaymentInfo) Set(val *FiatPaymentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableFiatPaymentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableFiatPaymentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiatPaymentInfo(val *FiatPaymentInfo) *NullableFiatPaymentInfo {
	return &NullableFiatPaymentInfo{value: val, isSet: true}
}

func (v NullableFiatPaymentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiatPaymentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
