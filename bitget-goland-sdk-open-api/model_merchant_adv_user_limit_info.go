/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MerchantAdvUserLimitInfo struct for MerchantAdvUserLimitInfo
type MerchantAdvUserLimitInfo struct {
	AllowMerchantPlace   *string `json:"allowMerchantPlace,omitempty"`
	Country              *string `json:"country,omitempty"`
	MaxCompleteNum       *string `json:"maxCompleteNum,omitempty"`
	MinCompleteNum       *string `json:"minCompleteNum,omitempty"`
	PlaceOrderNum        *string `json:"placeOrderNum,omitempty"`
	ThirtyCompleteRate   *string `json:"thirtyCompleteRate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MerchantAdvUserLimitInfo MerchantAdvUserLimitInfo

// NewMerchantAdvUserLimitInfo instantiates a new MerchantAdvUserLimitInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantAdvUserLimitInfo() *MerchantAdvUserLimitInfo {
	this := MerchantAdvUserLimitInfo{}
	return &this
}

// NewMerchantAdvUserLimitInfoWithDefaults instantiates a new MerchantAdvUserLimitInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantAdvUserLimitInfoWithDefaults() *MerchantAdvUserLimitInfo {
	this := MerchantAdvUserLimitInfo{}
	return &this
}

// GetAllowMerchantPlace returns the AllowMerchantPlace field value if set, zero value otherwise.
func (o *MerchantAdvUserLimitInfo) GetAllowMerchantPlace() string {
	if o == nil || isNil(o.AllowMerchantPlace) {
		var ret string
		return ret
	}
	return *o.AllowMerchantPlace
}

// GetAllowMerchantPlaceOk returns a tuple with the AllowMerchantPlace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantAdvUserLimitInfo) GetAllowMerchantPlaceOk() (*string, bool) {
	if o == nil || isNil(o.AllowMerchantPlace) {
		return nil, false
	}
	return o.AllowMerchantPlace, true
}

// HasAllowMerchantPlace returns a boolean if a field has been set.
func (o *MerchantAdvUserLimitInfo) HasAllowMerchantPlace() bool {
	if o != nil && !isNil(o.AllowMerchantPlace) {
		return true
	}

	return false
}

// SetAllowMerchantPlace gets a reference to the given string and assigns it to the AllowMerchantPlace field.
func (o *MerchantAdvUserLimitInfo) SetAllowMerchantPlace(v string) {
	o.AllowMerchantPlace = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *MerchantAdvUserLimitInfo) GetCountry() string {
	if o == nil || isNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantAdvUserLimitInfo) GetCountryOk() (*string, bool) {
	if o == nil || isNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *MerchantAdvUserLimitInfo) HasCountry() bool {
	if o != nil && !isNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *MerchantAdvUserLimitInfo) SetCountry(v string) {
	o.Country = &v
}

// GetMaxCompleteNum returns the MaxCompleteNum field value if set, zero value otherwise.
func (o *MerchantAdvUserLimitInfo) GetMaxCompleteNum() string {
	if o == nil || isNil(o.MaxCompleteNum) {
		var ret string
		return ret
	}
	return *o.MaxCompleteNum
}

// GetMaxCompleteNumOk returns a tuple with the MaxCompleteNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantAdvUserLimitInfo) GetMaxCompleteNumOk() (*string, bool) {
	if o == nil || isNil(o.MaxCompleteNum) {
		return nil, false
	}
	return o.MaxCompleteNum, true
}

// HasMaxCompleteNum returns a boolean if a field has been set.
func (o *MerchantAdvUserLimitInfo) HasMaxCompleteNum() bool {
	if o != nil && !isNil(o.MaxCompleteNum) {
		return true
	}

	return false
}

// SetMaxCompleteNum gets a reference to the given string and assigns it to the MaxCompleteNum field.
func (o *MerchantAdvUserLimitInfo) SetMaxCompleteNum(v string) {
	o.MaxCompleteNum = &v
}

// GetMinCompleteNum returns the MinCompleteNum field value if set, zero value otherwise.
func (o *MerchantAdvUserLimitInfo) GetMinCompleteNum() string {
	if o == nil || isNil(o.MinCompleteNum) {
		var ret string
		return ret
	}
	return *o.MinCompleteNum
}

// GetMinCompleteNumOk returns a tuple with the MinCompleteNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantAdvUserLimitInfo) GetMinCompleteNumOk() (*string, bool) {
	if o == nil || isNil(o.MinCompleteNum) {
		return nil, false
	}
	return o.MinCompleteNum, true
}

// HasMinCompleteNum returns a boolean if a field has been set.
func (o *MerchantAdvUserLimitInfo) HasMinCompleteNum() bool {
	if o != nil && !isNil(o.MinCompleteNum) {
		return true
	}

	return false
}

// SetMinCompleteNum gets a reference to the given string and assigns it to the MinCompleteNum field.
func (o *MerchantAdvUserLimitInfo) SetMinCompleteNum(v string) {
	o.MinCompleteNum = &v
}

// GetPlaceOrderNum returns the PlaceOrderNum field value if set, zero value otherwise.
func (o *MerchantAdvUserLimitInfo) GetPlaceOrderNum() string {
	if o == nil || isNil(o.PlaceOrderNum) {
		var ret string
		return ret
	}
	return *o.PlaceOrderNum
}

// GetPlaceOrderNumOk returns a tuple with the PlaceOrderNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantAdvUserLimitInfo) GetPlaceOrderNumOk() (*string, bool) {
	if o == nil || isNil(o.PlaceOrderNum) {
		return nil, false
	}
	return o.PlaceOrderNum, true
}

// HasPlaceOrderNum returns a boolean if a field has been set.
func (o *MerchantAdvUserLimitInfo) HasPlaceOrderNum() bool {
	if o != nil && !isNil(o.PlaceOrderNum) {
		return true
	}

	return false
}

// SetPlaceOrderNum gets a reference to the given string and assigns it to the PlaceOrderNum field.
func (o *MerchantAdvUserLimitInfo) SetPlaceOrderNum(v string) {
	o.PlaceOrderNum = &v
}

// GetThirtyCompleteRate returns the ThirtyCompleteRate field value if set, zero value otherwise.
func (o *MerchantAdvUserLimitInfo) GetThirtyCompleteRate() string {
	if o == nil || isNil(o.ThirtyCompleteRate) {
		var ret string
		return ret
	}
	return *o.ThirtyCompleteRate
}

// GetThirtyCompleteRateOk returns a tuple with the ThirtyCompleteRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantAdvUserLimitInfo) GetThirtyCompleteRateOk() (*string, bool) {
	if o == nil || isNil(o.ThirtyCompleteRate) {
		return nil, false
	}
	return o.ThirtyCompleteRate, true
}

// HasThirtyCompleteRate returns a boolean if a field has been set.
func (o *MerchantAdvUserLimitInfo) HasThirtyCompleteRate() bool {
	if o != nil && !isNil(o.ThirtyCompleteRate) {
		return true
	}

	return false
}

// SetThirtyCompleteRate gets a reference to the given string and assigns it to the ThirtyCompleteRate field.
func (o *MerchantAdvUserLimitInfo) SetThirtyCompleteRate(v string) {
	o.ThirtyCompleteRate = &v
}

func (o MerchantAdvUserLimitInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AllowMerchantPlace) {
		toSerialize["allowMerchantPlace"] = o.AllowMerchantPlace
	}
	if !isNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !isNil(o.MaxCompleteNum) {
		toSerialize["maxCompleteNum"] = o.MaxCompleteNum
	}
	if !isNil(o.MinCompleteNum) {
		toSerialize["minCompleteNum"] = o.MinCompleteNum
	}
	if !isNil(o.PlaceOrderNum) {
		toSerialize["placeOrderNum"] = o.PlaceOrderNum
	}
	if !isNil(o.ThirtyCompleteRate) {
		toSerialize["thirtyCompleteRate"] = o.ThirtyCompleteRate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MerchantAdvUserLimitInfo) UnmarshalJSON(bytes []byte) (err error) {
	varMerchantAdvUserLimitInfo := _MerchantAdvUserLimitInfo{}

	if err = json.Unmarshal(bytes, &varMerchantAdvUserLimitInfo); err == nil {
		*o = MerchantAdvUserLimitInfo(varMerchantAdvUserLimitInfo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "allowMerchantPlace")
		delete(additionalProperties, "country")
		delete(additionalProperties, "maxCompleteNum")
		delete(additionalProperties, "minCompleteNum")
		delete(additionalProperties, "placeOrderNum")
		delete(additionalProperties, "thirtyCompleteRate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMerchantAdvUserLimitInfo struct {
	value *MerchantAdvUserLimitInfo
	isSet bool
}

func (v NullableMerchantAdvUserLimitInfo) Get() *MerchantAdvUserLimitInfo {
	return v.value
}

func (v *NullableMerchantAdvUserLimitInfo) Set(val *MerchantAdvUserLimitInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantAdvUserLimitInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantAdvUserLimitInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantAdvUserLimitInfo(val *MerchantAdvUserLimitInfo) *NullableMerchantAdvUserLimitInfo {
	return &NullableMerchantAdvUserLimitInfo{value: val, isSet: true}
}

func (v NullableMerchantAdvUserLimitInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantAdvUserLimitInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
