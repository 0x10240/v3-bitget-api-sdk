/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TraceConfigSettingRequest struct for TraceConfigSettingRequest
type TraceConfigSettingRequest struct {
	// maxHoldCount
	MaxHoldCount string `json:"maxHoldCount"`
	// stopLossRation
	StopLossRation string `json:"stopLossRation"`
	// stopProfitRation
	StopProfitRation string `json:"stopProfitRation"`
	// symbolId
	SymbolId string `json:"symbolId"`
	// traceType
	TraceType string `json:"traceType"`
	// traceValue
	TraceValue           string `json:"traceValue"`
	AdditionalProperties map[string]interface{}
}

type _TraceConfigSettingRequest TraceConfigSettingRequest

// NewTraceConfigSettingRequest instantiates a new TraceConfigSettingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTraceConfigSettingRequest(maxHoldCount string, stopLossRation string, stopProfitRation string, symbolId string, traceType string, traceValue string) *TraceConfigSettingRequest {
	this := TraceConfigSettingRequest{}
	this.MaxHoldCount = maxHoldCount
	this.StopLossRation = stopLossRation
	this.StopProfitRation = stopProfitRation
	this.SymbolId = symbolId
	this.TraceType = traceType
	this.TraceValue = traceValue
	return &this
}

// NewTraceConfigSettingRequestWithDefaults instantiates a new TraceConfigSettingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTraceConfigSettingRequestWithDefaults() *TraceConfigSettingRequest {
	this := TraceConfigSettingRequest{}
	return &this
}

// GetMaxHoldCount returns the MaxHoldCount field value
func (o *TraceConfigSettingRequest) GetMaxHoldCount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxHoldCount
}

// GetMaxHoldCountOk returns a tuple with the MaxHoldCount field value
// and a boolean to check if the value has been set.
func (o *TraceConfigSettingRequest) GetMaxHoldCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxHoldCount, true
}

// SetMaxHoldCount sets field value
func (o *TraceConfigSettingRequest) SetMaxHoldCount(v string) {
	o.MaxHoldCount = v
}

// GetStopLossRation returns the StopLossRation field value
func (o *TraceConfigSettingRequest) GetStopLossRation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StopLossRation
}

// GetStopLossRationOk returns a tuple with the StopLossRation field value
// and a boolean to check if the value has been set.
func (o *TraceConfigSettingRequest) GetStopLossRationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StopLossRation, true
}

// SetStopLossRation sets field value
func (o *TraceConfigSettingRequest) SetStopLossRation(v string) {
	o.StopLossRation = v
}

// GetStopProfitRation returns the StopProfitRation field value
func (o *TraceConfigSettingRequest) GetStopProfitRation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StopProfitRation
}

// GetStopProfitRationOk returns a tuple with the StopProfitRation field value
// and a boolean to check if the value has been set.
func (o *TraceConfigSettingRequest) GetStopProfitRationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StopProfitRation, true
}

// SetStopProfitRation sets field value
func (o *TraceConfigSettingRequest) SetStopProfitRation(v string) {
	o.StopProfitRation = v
}

// GetSymbolId returns the SymbolId field value
func (o *TraceConfigSettingRequest) GetSymbolId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SymbolId
}

// GetSymbolIdOk returns a tuple with the SymbolId field value
// and a boolean to check if the value has been set.
func (o *TraceConfigSettingRequest) GetSymbolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SymbolId, true
}

// SetSymbolId sets field value
func (o *TraceConfigSettingRequest) SetSymbolId(v string) {
	o.SymbolId = v
}

// GetTraceType returns the TraceType field value
func (o *TraceConfigSettingRequest) GetTraceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TraceType
}

// GetTraceTypeOk returns a tuple with the TraceType field value
// and a boolean to check if the value has been set.
func (o *TraceConfigSettingRequest) GetTraceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TraceType, true
}

// SetTraceType sets field value
func (o *TraceConfigSettingRequest) SetTraceType(v string) {
	o.TraceType = v
}

// GetTraceValue returns the TraceValue field value
func (o *TraceConfigSettingRequest) GetTraceValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TraceValue
}

// GetTraceValueOk returns a tuple with the TraceValue field value
// and a boolean to check if the value has been set.
func (o *TraceConfigSettingRequest) GetTraceValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TraceValue, true
}

// SetTraceValue sets field value
func (o *TraceConfigSettingRequest) SetTraceValue(v string) {
	o.TraceValue = v
}

func (o TraceConfigSettingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["maxHoldCount"] = o.MaxHoldCount
	}
	if true {
		toSerialize["stopLossRation"] = o.StopLossRation
	}
	if true {
		toSerialize["stopProfitRation"] = o.StopProfitRation
	}
	if true {
		toSerialize["symbolId"] = o.SymbolId
	}
	if true {
		toSerialize["traceType"] = o.TraceType
	}
	if true {
		toSerialize["traceValue"] = o.TraceValue
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TraceConfigSettingRequest) UnmarshalJSON(bytes []byte) (err error) {
	varTraceConfigSettingRequest := _TraceConfigSettingRequest{}

	if err = json.Unmarshal(bytes, &varTraceConfigSettingRequest); err == nil {
		*o = TraceConfigSettingRequest(varTraceConfigSettingRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "maxHoldCount")
		delete(additionalProperties, "stopLossRation")
		delete(additionalProperties, "stopProfitRation")
		delete(additionalProperties, "symbolId")
		delete(additionalProperties, "traceType")
		delete(additionalProperties, "traceValue")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTraceConfigSettingRequest struct {
	value *TraceConfigSettingRequest
	isSet bool
}

func (v NullableTraceConfigSettingRequest) Get() *TraceConfigSettingRequest {
	return v.value
}

func (v *NullableTraceConfigSettingRequest) Set(val *TraceConfigSettingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTraceConfigSettingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTraceConfigSettingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTraceConfigSettingRequest(val *TraceConfigSettingRequest) *NullableTraceConfigSettingRequest {
	return &NullableTraceConfigSettingRequest{value: val, isSet: true}
}

func (v NullableTraceConfigSettingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTraceConfigSettingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
