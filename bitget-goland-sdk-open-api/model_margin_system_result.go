/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarginSystemResult struct for MarginSystemResult
type MarginSystemResult struct {
	BaseCoin             *string `json:"baseCoin,omitempty"`
	IsBorrowable         *bool   `json:"isBorrowable,omitempty"`
	LiquidationRiskRatio *string `json:"liquidationRiskRatio,omitempty"`
	MakerFeeRate         *string `json:"makerFeeRate,omitempty"`
	MaxCrossLeverage     *string `json:"maxCrossLeverage,omitempty"`
	MaxIsolatedLeverage  *string `json:"maxIsolatedLeverage,omitempty"`
	MaxTradeAmount       *string `json:"maxTradeAmount,omitempty"`
	MinTradeAmount       *string `json:"minTradeAmount,omitempty"`
	MinTradeUSDT         *string `json:"minTradeUSDT,omitempty"`
	PriceScale           *string `json:"priceScale,omitempty"`
	QuantityScale        *string `json:"quantityScale,omitempty"`
	QuoteCoin            *string `json:"quoteCoin,omitempty"`
	Status               *string `json:"status,omitempty"`
	Symbol               *string `json:"symbol,omitempty"`
	TakerFeeRate         *string `json:"takerFeeRate,omitempty"`
	UserMinBorrow        *string `json:"userMinBorrow,omitempty"`
	WarningRiskRatio     *string `json:"warningRiskRatio,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MarginSystemResult MarginSystemResult

// NewMarginSystemResult instantiates a new MarginSystemResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginSystemResult() *MarginSystemResult {
	this := MarginSystemResult{}
	return &this
}

// NewMarginSystemResultWithDefaults instantiates a new MarginSystemResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginSystemResultWithDefaults() *MarginSystemResult {
	this := MarginSystemResult{}
	return &this
}

// GetBaseCoin returns the BaseCoin field value if set, zero value otherwise.
func (o *MarginSystemResult) GetBaseCoin() string {
	if o == nil || isNil(o.BaseCoin) {
		var ret string
		return ret
	}
	return *o.BaseCoin
}

// GetBaseCoinOk returns a tuple with the BaseCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetBaseCoinOk() (*string, bool) {
	if o == nil || isNil(o.BaseCoin) {
		return nil, false
	}
	return o.BaseCoin, true
}

// HasBaseCoin returns a boolean if a field has been set.
func (o *MarginSystemResult) HasBaseCoin() bool {
	if o != nil && !isNil(o.BaseCoin) {
		return true
	}

	return false
}

// SetBaseCoin gets a reference to the given string and assigns it to the BaseCoin field.
func (o *MarginSystemResult) SetBaseCoin(v string) {
	o.BaseCoin = &v
}

// GetIsBorrowable returns the IsBorrowable field value if set, zero value otherwise.
func (o *MarginSystemResult) GetIsBorrowable() bool {
	if o == nil || isNil(o.IsBorrowable) {
		var ret bool
		return ret
	}
	return *o.IsBorrowable
}

// GetIsBorrowableOk returns a tuple with the IsBorrowable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetIsBorrowableOk() (*bool, bool) {
	if o == nil || isNil(o.IsBorrowable) {
		return nil, false
	}
	return o.IsBorrowable, true
}

// HasIsBorrowable returns a boolean if a field has been set.
func (o *MarginSystemResult) HasIsBorrowable() bool {
	if o != nil && !isNil(o.IsBorrowable) {
		return true
	}

	return false
}

// SetIsBorrowable gets a reference to the given bool and assigns it to the IsBorrowable field.
func (o *MarginSystemResult) SetIsBorrowable(v bool) {
	o.IsBorrowable = &v
}

// GetLiquidationRiskRatio returns the LiquidationRiskRatio field value if set, zero value otherwise.
func (o *MarginSystemResult) GetLiquidationRiskRatio() string {
	if o == nil || isNil(o.LiquidationRiskRatio) {
		var ret string
		return ret
	}
	return *o.LiquidationRiskRatio
}

// GetLiquidationRiskRatioOk returns a tuple with the LiquidationRiskRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetLiquidationRiskRatioOk() (*string, bool) {
	if o == nil || isNil(o.LiquidationRiskRatio) {
		return nil, false
	}
	return o.LiquidationRiskRatio, true
}

// HasLiquidationRiskRatio returns a boolean if a field has been set.
func (o *MarginSystemResult) HasLiquidationRiskRatio() bool {
	if o != nil && !isNil(o.LiquidationRiskRatio) {
		return true
	}

	return false
}

// SetLiquidationRiskRatio gets a reference to the given string and assigns it to the LiquidationRiskRatio field.
func (o *MarginSystemResult) SetLiquidationRiskRatio(v string) {
	o.LiquidationRiskRatio = &v
}

// GetMakerFeeRate returns the MakerFeeRate field value if set, zero value otherwise.
func (o *MarginSystemResult) GetMakerFeeRate() string {
	if o == nil || isNil(o.MakerFeeRate) {
		var ret string
		return ret
	}
	return *o.MakerFeeRate
}

// GetMakerFeeRateOk returns a tuple with the MakerFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetMakerFeeRateOk() (*string, bool) {
	if o == nil || isNil(o.MakerFeeRate) {
		return nil, false
	}
	return o.MakerFeeRate, true
}

// HasMakerFeeRate returns a boolean if a field has been set.
func (o *MarginSystemResult) HasMakerFeeRate() bool {
	if o != nil && !isNil(o.MakerFeeRate) {
		return true
	}

	return false
}

// SetMakerFeeRate gets a reference to the given string and assigns it to the MakerFeeRate field.
func (o *MarginSystemResult) SetMakerFeeRate(v string) {
	o.MakerFeeRate = &v
}

// GetMaxCrossLeverage returns the MaxCrossLeverage field value if set, zero value otherwise.
func (o *MarginSystemResult) GetMaxCrossLeverage() string {
	if o == nil || isNil(o.MaxCrossLeverage) {
		var ret string
		return ret
	}
	return *o.MaxCrossLeverage
}

// GetMaxCrossLeverageOk returns a tuple with the MaxCrossLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetMaxCrossLeverageOk() (*string, bool) {
	if o == nil || isNil(o.MaxCrossLeverage) {
		return nil, false
	}
	return o.MaxCrossLeverage, true
}

// HasMaxCrossLeverage returns a boolean if a field has been set.
func (o *MarginSystemResult) HasMaxCrossLeverage() bool {
	if o != nil && !isNil(o.MaxCrossLeverage) {
		return true
	}

	return false
}

// SetMaxCrossLeverage gets a reference to the given string and assigns it to the MaxCrossLeverage field.
func (o *MarginSystemResult) SetMaxCrossLeverage(v string) {
	o.MaxCrossLeverage = &v
}

// GetMaxIsolatedLeverage returns the MaxIsolatedLeverage field value if set, zero value otherwise.
func (o *MarginSystemResult) GetMaxIsolatedLeverage() string {
	if o == nil || isNil(o.MaxIsolatedLeverage) {
		var ret string
		return ret
	}
	return *o.MaxIsolatedLeverage
}

// GetMaxIsolatedLeverageOk returns a tuple with the MaxIsolatedLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetMaxIsolatedLeverageOk() (*string, bool) {
	if o == nil || isNil(o.MaxIsolatedLeverage) {
		return nil, false
	}
	return o.MaxIsolatedLeverage, true
}

// HasMaxIsolatedLeverage returns a boolean if a field has been set.
func (o *MarginSystemResult) HasMaxIsolatedLeverage() bool {
	if o != nil && !isNil(o.MaxIsolatedLeverage) {
		return true
	}

	return false
}

// SetMaxIsolatedLeverage gets a reference to the given string and assigns it to the MaxIsolatedLeverage field.
func (o *MarginSystemResult) SetMaxIsolatedLeverage(v string) {
	o.MaxIsolatedLeverage = &v
}

// GetMaxTradeAmount returns the MaxTradeAmount field value if set, zero value otherwise.
func (o *MarginSystemResult) GetMaxTradeAmount() string {
	if o == nil || isNil(o.MaxTradeAmount) {
		var ret string
		return ret
	}
	return *o.MaxTradeAmount
}

// GetMaxTradeAmountOk returns a tuple with the MaxTradeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetMaxTradeAmountOk() (*string, bool) {
	if o == nil || isNil(o.MaxTradeAmount) {
		return nil, false
	}
	return o.MaxTradeAmount, true
}

// HasMaxTradeAmount returns a boolean if a field has been set.
func (o *MarginSystemResult) HasMaxTradeAmount() bool {
	if o != nil && !isNil(o.MaxTradeAmount) {
		return true
	}

	return false
}

// SetMaxTradeAmount gets a reference to the given string and assigns it to the MaxTradeAmount field.
func (o *MarginSystemResult) SetMaxTradeAmount(v string) {
	o.MaxTradeAmount = &v
}

// GetMinTradeAmount returns the MinTradeAmount field value if set, zero value otherwise.
func (o *MarginSystemResult) GetMinTradeAmount() string {
	if o == nil || isNil(o.MinTradeAmount) {
		var ret string
		return ret
	}
	return *o.MinTradeAmount
}

// GetMinTradeAmountOk returns a tuple with the MinTradeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetMinTradeAmountOk() (*string, bool) {
	if o == nil || isNil(o.MinTradeAmount) {
		return nil, false
	}
	return o.MinTradeAmount, true
}

// HasMinTradeAmount returns a boolean if a field has been set.
func (o *MarginSystemResult) HasMinTradeAmount() bool {
	if o != nil && !isNil(o.MinTradeAmount) {
		return true
	}

	return false
}

// SetMinTradeAmount gets a reference to the given string and assigns it to the MinTradeAmount field.
func (o *MarginSystemResult) SetMinTradeAmount(v string) {
	o.MinTradeAmount = &v
}

// GetMinTradeUSDT returns the MinTradeUSDT field value if set, zero value otherwise.
func (o *MarginSystemResult) GetMinTradeUSDT() string {
	if o == nil || isNil(o.MinTradeUSDT) {
		var ret string
		return ret
	}
	return *o.MinTradeUSDT
}

// GetMinTradeUSDTOk returns a tuple with the MinTradeUSDT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetMinTradeUSDTOk() (*string, bool) {
	if o == nil || isNil(o.MinTradeUSDT) {
		return nil, false
	}
	return o.MinTradeUSDT, true
}

// HasMinTradeUSDT returns a boolean if a field has been set.
func (o *MarginSystemResult) HasMinTradeUSDT() bool {
	if o != nil && !isNil(o.MinTradeUSDT) {
		return true
	}

	return false
}

// SetMinTradeUSDT gets a reference to the given string and assigns it to the MinTradeUSDT field.
func (o *MarginSystemResult) SetMinTradeUSDT(v string) {
	o.MinTradeUSDT = &v
}

// GetPriceScale returns the PriceScale field value if set, zero value otherwise.
func (o *MarginSystemResult) GetPriceScale() string {
	if o == nil || isNil(o.PriceScale) {
		var ret string
		return ret
	}
	return *o.PriceScale
}

// GetPriceScaleOk returns a tuple with the PriceScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetPriceScaleOk() (*string, bool) {
	if o == nil || isNil(o.PriceScale) {
		return nil, false
	}
	return o.PriceScale, true
}

// HasPriceScale returns a boolean if a field has been set.
func (o *MarginSystemResult) HasPriceScale() bool {
	if o != nil && !isNil(o.PriceScale) {
		return true
	}

	return false
}

// SetPriceScale gets a reference to the given string and assigns it to the PriceScale field.
func (o *MarginSystemResult) SetPriceScale(v string) {
	o.PriceScale = &v
}

// GetQuantityScale returns the QuantityScale field value if set, zero value otherwise.
func (o *MarginSystemResult) GetQuantityScale() string {
	if o == nil || isNil(o.QuantityScale) {
		var ret string
		return ret
	}
	return *o.QuantityScale
}

// GetQuantityScaleOk returns a tuple with the QuantityScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetQuantityScaleOk() (*string, bool) {
	if o == nil || isNil(o.QuantityScale) {
		return nil, false
	}
	return o.QuantityScale, true
}

// HasQuantityScale returns a boolean if a field has been set.
func (o *MarginSystemResult) HasQuantityScale() bool {
	if o != nil && !isNil(o.QuantityScale) {
		return true
	}

	return false
}

// SetQuantityScale gets a reference to the given string and assigns it to the QuantityScale field.
func (o *MarginSystemResult) SetQuantityScale(v string) {
	o.QuantityScale = &v
}

// GetQuoteCoin returns the QuoteCoin field value if set, zero value otherwise.
func (o *MarginSystemResult) GetQuoteCoin() string {
	if o == nil || isNil(o.QuoteCoin) {
		var ret string
		return ret
	}
	return *o.QuoteCoin
}

// GetQuoteCoinOk returns a tuple with the QuoteCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetQuoteCoinOk() (*string, bool) {
	if o == nil || isNil(o.QuoteCoin) {
		return nil, false
	}
	return o.QuoteCoin, true
}

// HasQuoteCoin returns a boolean if a field has been set.
func (o *MarginSystemResult) HasQuoteCoin() bool {
	if o != nil && !isNil(o.QuoteCoin) {
		return true
	}

	return false
}

// SetQuoteCoin gets a reference to the given string and assigns it to the QuoteCoin field.
func (o *MarginSystemResult) SetQuoteCoin(v string) {
	o.QuoteCoin = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MarginSystemResult) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MarginSystemResult) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MarginSystemResult) SetStatus(v string) {
	o.Status = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *MarginSystemResult) GetSymbol() string {
	if o == nil || isNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetSymbolOk() (*string, bool) {
	if o == nil || isNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *MarginSystemResult) HasSymbol() bool {
	if o != nil && !isNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *MarginSystemResult) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTakerFeeRate returns the TakerFeeRate field value if set, zero value otherwise.
func (o *MarginSystemResult) GetTakerFeeRate() string {
	if o == nil || isNil(o.TakerFeeRate) {
		var ret string
		return ret
	}
	return *o.TakerFeeRate
}

// GetTakerFeeRateOk returns a tuple with the TakerFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetTakerFeeRateOk() (*string, bool) {
	if o == nil || isNil(o.TakerFeeRate) {
		return nil, false
	}
	return o.TakerFeeRate, true
}

// HasTakerFeeRate returns a boolean if a field has been set.
func (o *MarginSystemResult) HasTakerFeeRate() bool {
	if o != nil && !isNil(o.TakerFeeRate) {
		return true
	}

	return false
}

// SetTakerFeeRate gets a reference to the given string and assigns it to the TakerFeeRate field.
func (o *MarginSystemResult) SetTakerFeeRate(v string) {
	o.TakerFeeRate = &v
}

// GetUserMinBorrow returns the UserMinBorrow field value if set, zero value otherwise.
func (o *MarginSystemResult) GetUserMinBorrow() string {
	if o == nil || isNil(o.UserMinBorrow) {
		var ret string
		return ret
	}
	return *o.UserMinBorrow
}

// GetUserMinBorrowOk returns a tuple with the UserMinBorrow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetUserMinBorrowOk() (*string, bool) {
	if o == nil || isNil(o.UserMinBorrow) {
		return nil, false
	}
	return o.UserMinBorrow, true
}

// HasUserMinBorrow returns a boolean if a field has been set.
func (o *MarginSystemResult) HasUserMinBorrow() bool {
	if o != nil && !isNil(o.UserMinBorrow) {
		return true
	}

	return false
}

// SetUserMinBorrow gets a reference to the given string and assigns it to the UserMinBorrow field.
func (o *MarginSystemResult) SetUserMinBorrow(v string) {
	o.UserMinBorrow = &v
}

// GetWarningRiskRatio returns the WarningRiskRatio field value if set, zero value otherwise.
func (o *MarginSystemResult) GetWarningRiskRatio() string {
	if o == nil || isNil(o.WarningRiskRatio) {
		var ret string
		return ret
	}
	return *o.WarningRiskRatio
}

// GetWarningRiskRatioOk returns a tuple with the WarningRiskRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginSystemResult) GetWarningRiskRatioOk() (*string, bool) {
	if o == nil || isNil(o.WarningRiskRatio) {
		return nil, false
	}
	return o.WarningRiskRatio, true
}

// HasWarningRiskRatio returns a boolean if a field has been set.
func (o *MarginSystemResult) HasWarningRiskRatio() bool {
	if o != nil && !isNil(o.WarningRiskRatio) {
		return true
	}

	return false
}

// SetWarningRiskRatio gets a reference to the given string and assigns it to the WarningRiskRatio field.
func (o *MarginSystemResult) SetWarningRiskRatio(v string) {
	o.WarningRiskRatio = &v
}

func (o MarginSystemResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BaseCoin) {
		toSerialize["baseCoin"] = o.BaseCoin
	}
	if !isNil(o.IsBorrowable) {
		toSerialize["isBorrowable"] = o.IsBorrowable
	}
	if !isNil(o.LiquidationRiskRatio) {
		toSerialize["liquidationRiskRatio"] = o.LiquidationRiskRatio
	}
	if !isNil(o.MakerFeeRate) {
		toSerialize["makerFeeRate"] = o.MakerFeeRate
	}
	if !isNil(o.MaxCrossLeverage) {
		toSerialize["maxCrossLeverage"] = o.MaxCrossLeverage
	}
	if !isNil(o.MaxIsolatedLeverage) {
		toSerialize["maxIsolatedLeverage"] = o.MaxIsolatedLeverage
	}
	if !isNil(o.MaxTradeAmount) {
		toSerialize["maxTradeAmount"] = o.MaxTradeAmount
	}
	if !isNil(o.MinTradeAmount) {
		toSerialize["minTradeAmount"] = o.MinTradeAmount
	}
	if !isNil(o.MinTradeUSDT) {
		toSerialize["minTradeUSDT"] = o.MinTradeUSDT
	}
	if !isNil(o.PriceScale) {
		toSerialize["priceScale"] = o.PriceScale
	}
	if !isNil(o.QuantityScale) {
		toSerialize["quantityScale"] = o.QuantityScale
	}
	if !isNil(o.QuoteCoin) {
		toSerialize["quoteCoin"] = o.QuoteCoin
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !isNil(o.TakerFeeRate) {
		toSerialize["takerFeeRate"] = o.TakerFeeRate
	}
	if !isNil(o.UserMinBorrow) {
		toSerialize["userMinBorrow"] = o.UserMinBorrow
	}
	if !isNil(o.WarningRiskRatio) {
		toSerialize["warningRiskRatio"] = o.WarningRiskRatio
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MarginSystemResult) UnmarshalJSON(bytes []byte) (err error) {
	varMarginSystemResult := _MarginSystemResult{}

	if err = json.Unmarshal(bytes, &varMarginSystemResult); err == nil {
		*o = MarginSystemResult(varMarginSystemResult)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "baseCoin")
		delete(additionalProperties, "isBorrowable")
		delete(additionalProperties, "liquidationRiskRatio")
		delete(additionalProperties, "makerFeeRate")
		delete(additionalProperties, "maxCrossLeverage")
		delete(additionalProperties, "maxIsolatedLeverage")
		delete(additionalProperties, "maxTradeAmount")
		delete(additionalProperties, "minTradeAmount")
		delete(additionalProperties, "minTradeUSDT")
		delete(additionalProperties, "priceScale")
		delete(additionalProperties, "quantityScale")
		delete(additionalProperties, "quoteCoin")
		delete(additionalProperties, "status")
		delete(additionalProperties, "symbol")
		delete(additionalProperties, "takerFeeRate")
		delete(additionalProperties, "userMinBorrow")
		delete(additionalProperties, "warningRiskRatio")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMarginSystemResult struct {
	value *MarginSystemResult
	isSet bool
}

func (v NullableMarginSystemResult) Get() *MarginSystemResult {
	return v.value
}

func (v *NullableMarginSystemResult) Set(val *MarginSystemResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginSystemResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginSystemResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginSystemResult(val *MarginSystemResult) *NullableMarginSystemResult {
	return &NullableMarginSystemResult{value: val, isSet: true}
}

func (v NullableMarginSystemResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginSystemResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
