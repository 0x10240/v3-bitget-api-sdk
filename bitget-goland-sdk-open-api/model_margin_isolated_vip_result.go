/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarginIsolatedVipResult struct for MarginIsolatedVipResult
type MarginIsolatedVipResult struct {
	DailyInterestRate    *string `json:"dailyInterestRate,omitempty"`
	DiscountRate         *string `json:"discountRate,omitempty"`
	Level                *string `json:"level,omitempty"`
	YearlyInterestRate   *string `json:"yearlyInterestRate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MarginIsolatedVipResult MarginIsolatedVipResult

// NewMarginIsolatedVipResult instantiates a new MarginIsolatedVipResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginIsolatedVipResult() *MarginIsolatedVipResult {
	this := MarginIsolatedVipResult{}
	return &this
}

// NewMarginIsolatedVipResultWithDefaults instantiates a new MarginIsolatedVipResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginIsolatedVipResultWithDefaults() *MarginIsolatedVipResult {
	this := MarginIsolatedVipResult{}
	return &this
}

// GetDailyInterestRate returns the DailyInterestRate field value if set, zero value otherwise.
func (o *MarginIsolatedVipResult) GetDailyInterestRate() string {
	if o == nil || isNil(o.DailyInterestRate) {
		var ret string
		return ret
	}
	return *o.DailyInterestRate
}

// GetDailyInterestRateOk returns a tuple with the DailyInterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedVipResult) GetDailyInterestRateOk() (*string, bool) {
	if o == nil || isNil(o.DailyInterestRate) {
		return nil, false
	}
	return o.DailyInterestRate, true
}

// HasDailyInterestRate returns a boolean if a field has been set.
func (o *MarginIsolatedVipResult) HasDailyInterestRate() bool {
	if o != nil && !isNil(o.DailyInterestRate) {
		return true
	}

	return false
}

// SetDailyInterestRate gets a reference to the given string and assigns it to the DailyInterestRate field.
func (o *MarginIsolatedVipResult) SetDailyInterestRate(v string) {
	o.DailyInterestRate = &v
}

// GetDiscountRate returns the DiscountRate field value if set, zero value otherwise.
func (o *MarginIsolatedVipResult) GetDiscountRate() string {
	if o == nil || isNil(o.DiscountRate) {
		var ret string
		return ret
	}
	return *o.DiscountRate
}

// GetDiscountRateOk returns a tuple with the DiscountRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedVipResult) GetDiscountRateOk() (*string, bool) {
	if o == nil || isNil(o.DiscountRate) {
		return nil, false
	}
	return o.DiscountRate, true
}

// HasDiscountRate returns a boolean if a field has been set.
func (o *MarginIsolatedVipResult) HasDiscountRate() bool {
	if o != nil && !isNil(o.DiscountRate) {
		return true
	}

	return false
}

// SetDiscountRate gets a reference to the given string and assigns it to the DiscountRate field.
func (o *MarginIsolatedVipResult) SetDiscountRate(v string) {
	o.DiscountRate = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *MarginIsolatedVipResult) GetLevel() string {
	if o == nil || isNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedVipResult) GetLevelOk() (*string, bool) {
	if o == nil || isNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *MarginIsolatedVipResult) HasLevel() bool {
	if o != nil && !isNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *MarginIsolatedVipResult) SetLevel(v string) {
	o.Level = &v
}

// GetYearlyInterestRate returns the YearlyInterestRate field value if set, zero value otherwise.
func (o *MarginIsolatedVipResult) GetYearlyInterestRate() string {
	if o == nil || isNil(o.YearlyInterestRate) {
		var ret string
		return ret
	}
	return *o.YearlyInterestRate
}

// GetYearlyInterestRateOk returns a tuple with the YearlyInterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginIsolatedVipResult) GetYearlyInterestRateOk() (*string, bool) {
	if o == nil || isNil(o.YearlyInterestRate) {
		return nil, false
	}
	return o.YearlyInterestRate, true
}

// HasYearlyInterestRate returns a boolean if a field has been set.
func (o *MarginIsolatedVipResult) HasYearlyInterestRate() bool {
	if o != nil && !isNil(o.YearlyInterestRate) {
		return true
	}

	return false
}

// SetYearlyInterestRate gets a reference to the given string and assigns it to the YearlyInterestRate field.
func (o *MarginIsolatedVipResult) SetYearlyInterestRate(v string) {
	o.YearlyInterestRate = &v
}

func (o MarginIsolatedVipResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DailyInterestRate) {
		toSerialize["dailyInterestRate"] = o.DailyInterestRate
	}
	if !isNil(o.DiscountRate) {
		toSerialize["discountRate"] = o.DiscountRate
	}
	if !isNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !isNil(o.YearlyInterestRate) {
		toSerialize["yearlyInterestRate"] = o.YearlyInterestRate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MarginIsolatedVipResult) UnmarshalJSON(bytes []byte) (err error) {
	varMarginIsolatedVipResult := _MarginIsolatedVipResult{}

	if err = json.Unmarshal(bytes, &varMarginIsolatedVipResult); err == nil {
		*o = MarginIsolatedVipResult(varMarginIsolatedVipResult)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "dailyInterestRate")
		delete(additionalProperties, "discountRate")
		delete(additionalProperties, "level")
		delete(additionalProperties, "yearlyInterestRate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMarginIsolatedVipResult struct {
	value *MarginIsolatedVipResult
	isSet bool
}

func (v NullableMarginIsolatedVipResult) Get() *MarginIsolatedVipResult {
	return v.value
}

func (v *NullableMarginIsolatedVipResult) Set(val *MarginIsolatedVipResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginIsolatedVipResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginIsolatedVipResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginIsolatedVipResult(val *MarginIsolatedVipResult) *NullableMarginIsolatedVipResult {
	return &NullableMarginIsolatedVipResult{value: val, isSet: true}
}

func (v NullableMarginIsolatedVipResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginIsolatedVipResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
