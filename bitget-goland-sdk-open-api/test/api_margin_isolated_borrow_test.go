/*
Bitget Open API

Testing MarginIsolatedBorrowApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"fmt"
	openapiclient "github.com/bitget/openapi"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_MarginIsolatedBorrowApiService(t *testing.T) {

	apiClient := openapiclient.NewAPIClient(openapiclient.NewDefaultConfiguration())

	t.Run("Test MarginIsolatedBorrowApiService IsolatedLoanList", func(t *testing.T) {

		resp, httpRes, err := apiClient.MarginIsolatedBorrowApi.IsolatedLoanList(context.Background()).Symbol("BTCUSDT").StartTime("1677274167003").EndTime("1680057356760").PageSize("10").Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
		assert.Equal(t, "00000", resp.GetCode())
		assert.Equal(t, "success", resp.GetMsg())
		assert.NotNil(t, resp.GetData())
		data := resp.GetData()
		for i, item := range data.GetResultList() {
			fmt.Printf("%d %v\n", i, item)
			assert.NotEmpty(t, item.GetAmount())
		}

	})

}
