/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarginCrossLevelResult struct for MarginCrossLevelResult
type MarginCrossLevelResult struct {
	Coin                 *string `json:"coin,omitempty"`
	Leverage             *string `json:"leverage,omitempty"`
	MaintainMarginRate   *string `json:"maintainMarginRate,omitempty"`
	MaxBorrowableAmount  *string `json:"maxBorrowableAmount,omitempty"`
	Tier                 *string `json:"tier,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MarginCrossLevelResult MarginCrossLevelResult

// NewMarginCrossLevelResult instantiates a new MarginCrossLevelResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginCrossLevelResult() *MarginCrossLevelResult {
	this := MarginCrossLevelResult{}
	return &this
}

// NewMarginCrossLevelResultWithDefaults instantiates a new MarginCrossLevelResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginCrossLevelResultWithDefaults() *MarginCrossLevelResult {
	this := MarginCrossLevelResult{}
	return &this
}

// GetCoin returns the Coin field value if set, zero value otherwise.
func (o *MarginCrossLevelResult) GetCoin() string {
	if o == nil || isNil(o.Coin) {
		var ret string
		return ret
	}
	return *o.Coin
}

// GetCoinOk returns a tuple with the Coin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginCrossLevelResult) GetCoinOk() (*string, bool) {
	if o == nil || isNil(o.Coin) {
		return nil, false
	}
	return o.Coin, true
}

// HasCoin returns a boolean if a field has been set.
func (o *MarginCrossLevelResult) HasCoin() bool {
	if o != nil && !isNil(o.Coin) {
		return true
	}

	return false
}

// SetCoin gets a reference to the given string and assigns it to the Coin field.
func (o *MarginCrossLevelResult) SetCoin(v string) {
	o.Coin = &v
}

// GetLeverage returns the Leverage field value if set, zero value otherwise.
func (o *MarginCrossLevelResult) GetLeverage() string {
	if o == nil || isNil(o.Leverage) {
		var ret string
		return ret
	}
	return *o.Leverage
}

// GetLeverageOk returns a tuple with the Leverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginCrossLevelResult) GetLeverageOk() (*string, bool) {
	if o == nil || isNil(o.Leverage) {
		return nil, false
	}
	return o.Leverage, true
}

// HasLeverage returns a boolean if a field has been set.
func (o *MarginCrossLevelResult) HasLeverage() bool {
	if o != nil && !isNil(o.Leverage) {
		return true
	}

	return false
}

// SetLeverage gets a reference to the given string and assigns it to the Leverage field.
func (o *MarginCrossLevelResult) SetLeverage(v string) {
	o.Leverage = &v
}

// GetMaintainMarginRate returns the MaintainMarginRate field value if set, zero value otherwise.
func (o *MarginCrossLevelResult) GetMaintainMarginRate() string {
	if o == nil || isNil(o.MaintainMarginRate) {
		var ret string
		return ret
	}
	return *o.MaintainMarginRate
}

// GetMaintainMarginRateOk returns a tuple with the MaintainMarginRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginCrossLevelResult) GetMaintainMarginRateOk() (*string, bool) {
	if o == nil || isNil(o.MaintainMarginRate) {
		return nil, false
	}
	return o.MaintainMarginRate, true
}

// HasMaintainMarginRate returns a boolean if a field has been set.
func (o *MarginCrossLevelResult) HasMaintainMarginRate() bool {
	if o != nil && !isNil(o.MaintainMarginRate) {
		return true
	}

	return false
}

// SetMaintainMarginRate gets a reference to the given string and assigns it to the MaintainMarginRate field.
func (o *MarginCrossLevelResult) SetMaintainMarginRate(v string) {
	o.MaintainMarginRate = &v
}

// GetMaxBorrowableAmount returns the MaxBorrowableAmount field value if set, zero value otherwise.
func (o *MarginCrossLevelResult) GetMaxBorrowableAmount() string {
	if o == nil || isNil(o.MaxBorrowableAmount) {
		var ret string
		return ret
	}
	return *o.MaxBorrowableAmount
}

// GetMaxBorrowableAmountOk returns a tuple with the MaxBorrowableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginCrossLevelResult) GetMaxBorrowableAmountOk() (*string, bool) {
	if o == nil || isNil(o.MaxBorrowableAmount) {
		return nil, false
	}
	return o.MaxBorrowableAmount, true
}

// HasMaxBorrowableAmount returns a boolean if a field has been set.
func (o *MarginCrossLevelResult) HasMaxBorrowableAmount() bool {
	if o != nil && !isNil(o.MaxBorrowableAmount) {
		return true
	}

	return false
}

// SetMaxBorrowableAmount gets a reference to the given string and assigns it to the MaxBorrowableAmount field.
func (o *MarginCrossLevelResult) SetMaxBorrowableAmount(v string) {
	o.MaxBorrowableAmount = &v
}

// GetTier returns the Tier field value if set, zero value otherwise.
func (o *MarginCrossLevelResult) GetTier() string {
	if o == nil || isNil(o.Tier) {
		var ret string
		return ret
	}
	return *o.Tier
}

// GetTierOk returns a tuple with the Tier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginCrossLevelResult) GetTierOk() (*string, bool) {
	if o == nil || isNil(o.Tier) {
		return nil, false
	}
	return o.Tier, true
}

// HasTier returns a boolean if a field has been set.
func (o *MarginCrossLevelResult) HasTier() bool {
	if o != nil && !isNil(o.Tier) {
		return true
	}

	return false
}

// SetTier gets a reference to the given string and assigns it to the Tier field.
func (o *MarginCrossLevelResult) SetTier(v string) {
	o.Tier = &v
}

func (o MarginCrossLevelResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Coin) {
		toSerialize["coin"] = o.Coin
	}
	if !isNil(o.Leverage) {
		toSerialize["leverage"] = o.Leverage
	}
	if !isNil(o.MaintainMarginRate) {
		toSerialize["maintainMarginRate"] = o.MaintainMarginRate
	}
	if !isNil(o.MaxBorrowableAmount) {
		toSerialize["maxBorrowableAmount"] = o.MaxBorrowableAmount
	}
	if !isNil(o.Tier) {
		toSerialize["tier"] = o.Tier
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MarginCrossLevelResult) UnmarshalJSON(bytes []byte) (err error) {
	varMarginCrossLevelResult := _MarginCrossLevelResult{}

	if err = json.Unmarshal(bytes, &varMarginCrossLevelResult); err == nil {
		*o = MarginCrossLevelResult(varMarginCrossLevelResult)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "coin")
		delete(additionalProperties, "leverage")
		delete(additionalProperties, "maintainMarginRate")
		delete(additionalProperties, "maxBorrowableAmount")
		delete(additionalProperties, "tier")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMarginCrossLevelResult struct {
	value *MarginCrossLevelResult
	isSet bool
}

func (v NullableMarginCrossLevelResult) Get() *MarginCrossLevelResult {
	return v.value
}

func (v *NullableMarginCrossLevelResult) Set(val *MarginCrossLevelResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginCrossLevelResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginCrossLevelResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginCrossLevelResult(val *MarginCrossLevelResult) *NullableMarginCrossLevelResult {
	return &NullableMarginCrossLevelResult{value: val, isSet: true}
}

func (v NullableMarginCrossLevelResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginCrossLevelResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
