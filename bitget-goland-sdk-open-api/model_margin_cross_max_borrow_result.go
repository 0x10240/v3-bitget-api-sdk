/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarginCrossMaxBorrowResult struct for MarginCrossMaxBorrowResult
type MarginCrossMaxBorrowResult struct {
	Coin                 *string `json:"coin,omitempty"`
	MaxBorrowableAmount  *string `json:"maxBorrowableAmount,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MarginCrossMaxBorrowResult MarginCrossMaxBorrowResult

// NewMarginCrossMaxBorrowResult instantiates a new MarginCrossMaxBorrowResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginCrossMaxBorrowResult() *MarginCrossMaxBorrowResult {
	this := MarginCrossMaxBorrowResult{}
	return &this
}

// NewMarginCrossMaxBorrowResultWithDefaults instantiates a new MarginCrossMaxBorrowResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginCrossMaxBorrowResultWithDefaults() *MarginCrossMaxBorrowResult {
	this := MarginCrossMaxBorrowResult{}
	return &this
}

// GetCoin returns the Coin field value if set, zero value otherwise.
func (o *MarginCrossMaxBorrowResult) GetCoin() string {
	if o == nil || isNil(o.Coin) {
		var ret string
		return ret
	}
	return *o.Coin
}

// GetCoinOk returns a tuple with the Coin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginCrossMaxBorrowResult) GetCoinOk() (*string, bool) {
	if o == nil || isNil(o.Coin) {
		return nil, false
	}
	return o.Coin, true
}

// HasCoin returns a boolean if a field has been set.
func (o *MarginCrossMaxBorrowResult) HasCoin() bool {
	if o != nil && !isNil(o.Coin) {
		return true
	}

	return false
}

// SetCoin gets a reference to the given string and assigns it to the Coin field.
func (o *MarginCrossMaxBorrowResult) SetCoin(v string) {
	o.Coin = &v
}

// GetMaxBorrowableAmount returns the MaxBorrowableAmount field value if set, zero value otherwise.
func (o *MarginCrossMaxBorrowResult) GetMaxBorrowableAmount() string {
	if o == nil || isNil(o.MaxBorrowableAmount) {
		var ret string
		return ret
	}
	return *o.MaxBorrowableAmount
}

// GetMaxBorrowableAmountOk returns a tuple with the MaxBorrowableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginCrossMaxBorrowResult) GetMaxBorrowableAmountOk() (*string, bool) {
	if o == nil || isNil(o.MaxBorrowableAmount) {
		return nil, false
	}
	return o.MaxBorrowableAmount, true
}

// HasMaxBorrowableAmount returns a boolean if a field has been set.
func (o *MarginCrossMaxBorrowResult) HasMaxBorrowableAmount() bool {
	if o != nil && !isNil(o.MaxBorrowableAmount) {
		return true
	}

	return false
}

// SetMaxBorrowableAmount gets a reference to the given string and assigns it to the MaxBorrowableAmount field.
func (o *MarginCrossMaxBorrowResult) SetMaxBorrowableAmount(v string) {
	o.MaxBorrowableAmount = &v
}

func (o MarginCrossMaxBorrowResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Coin) {
		toSerialize["coin"] = o.Coin
	}
	if !isNil(o.MaxBorrowableAmount) {
		toSerialize["maxBorrowableAmount"] = o.MaxBorrowableAmount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MarginCrossMaxBorrowResult) UnmarshalJSON(bytes []byte) (err error) {
	varMarginCrossMaxBorrowResult := _MarginCrossMaxBorrowResult{}

	if err = json.Unmarshal(bytes, &varMarginCrossMaxBorrowResult); err == nil {
		*o = MarginCrossMaxBorrowResult(varMarginCrossMaxBorrowResult)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "coin")
		delete(additionalProperties, "maxBorrowableAmount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMarginCrossMaxBorrowResult struct {
	value *MarginCrossMaxBorrowResult
	isSet bool
}

func (v NullableMarginCrossMaxBorrowResult) Get() *MarginCrossMaxBorrowResult {
	return v.value
}

func (v *NullableMarginCrossMaxBorrowResult) Set(val *MarginCrossMaxBorrowResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginCrossMaxBorrowResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginCrossMaxBorrowResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginCrossMaxBorrowResult(val *MarginCrossMaxBorrowResult) *NullableMarginCrossMaxBorrowResult {
	return &NullableMarginCrossMaxBorrowResult{value: val, isSet: true}
}

func (v NullableMarginCrossMaxBorrowResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginCrossMaxBorrowResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
