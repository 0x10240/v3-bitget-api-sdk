/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MerchantInfo struct for MerchantInfo
type MerchantInfo struct {
	AveragePayment       *string `json:"averagePayment,omitempty"`
	AverageRealese       *string `json:"averageRealese,omitempty"`
	IsOnline             *string `json:"isOnline,omitempty"`
	MerchantId           *string `json:"merchantId,omitempty"`
	NickName             *string `json:"nickName,omitempty"`
	RegisterTime         *string `json:"registerTime,omitempty"`
	ThirtyBuy            *string `json:"thirtyBuy,omitempty"`
	ThirtyCompletionRate *string `json:"thirtyCompletionRate,omitempty"`
	ThirtySell           *string `json:"thirtySell,omitempty"`
	ThirtyTrades         *string `json:"thirtyTrades,omitempty"`
	TotalBuy             *string `json:"totalBuy,omitempty"`
	TotalCompletionRate  *string `json:"totalCompletionRate,omitempty"`
	TotalSell            *string `json:"totalSell,omitempty"`
	TotalTrades          *string `json:"totalTrades,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MerchantInfo MerchantInfo

// NewMerchantInfo instantiates a new MerchantInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantInfo() *MerchantInfo {
	this := MerchantInfo{}
	return &this
}

// NewMerchantInfoWithDefaults instantiates a new MerchantInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantInfoWithDefaults() *MerchantInfo {
	this := MerchantInfo{}
	return &this
}

// GetAveragePayment returns the AveragePayment field value if set, zero value otherwise.
func (o *MerchantInfo) GetAveragePayment() string {
	if o == nil || isNil(o.AveragePayment) {
		var ret string
		return ret
	}
	return *o.AveragePayment
}

// GetAveragePaymentOk returns a tuple with the AveragePayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetAveragePaymentOk() (*string, bool) {
	if o == nil || isNil(o.AveragePayment) {
		return nil, false
	}
	return o.AveragePayment, true
}

// HasAveragePayment returns a boolean if a field has been set.
func (o *MerchantInfo) HasAveragePayment() bool {
	if o != nil && !isNil(o.AveragePayment) {
		return true
	}

	return false
}

// SetAveragePayment gets a reference to the given string and assigns it to the AveragePayment field.
func (o *MerchantInfo) SetAveragePayment(v string) {
	o.AveragePayment = &v
}

// GetAverageRealese returns the AverageRealese field value if set, zero value otherwise.
func (o *MerchantInfo) GetAverageRealese() string {
	if o == nil || isNil(o.AverageRealese) {
		var ret string
		return ret
	}
	return *o.AverageRealese
}

// GetAverageRealeseOk returns a tuple with the AverageRealese field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetAverageRealeseOk() (*string, bool) {
	if o == nil || isNil(o.AverageRealese) {
		return nil, false
	}
	return o.AverageRealese, true
}

// HasAverageRealese returns a boolean if a field has been set.
func (o *MerchantInfo) HasAverageRealese() bool {
	if o != nil && !isNil(o.AverageRealese) {
		return true
	}

	return false
}

// SetAverageRealese gets a reference to the given string and assigns it to the AverageRealese field.
func (o *MerchantInfo) SetAverageRealese(v string) {
	o.AverageRealese = &v
}

// GetIsOnline returns the IsOnline field value if set, zero value otherwise.
func (o *MerchantInfo) GetIsOnline() string {
	if o == nil || isNil(o.IsOnline) {
		var ret string
		return ret
	}
	return *o.IsOnline
}

// GetIsOnlineOk returns a tuple with the IsOnline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetIsOnlineOk() (*string, bool) {
	if o == nil || isNil(o.IsOnline) {
		return nil, false
	}
	return o.IsOnline, true
}

// HasIsOnline returns a boolean if a field has been set.
func (o *MerchantInfo) HasIsOnline() bool {
	if o != nil && !isNil(o.IsOnline) {
		return true
	}

	return false
}

// SetIsOnline gets a reference to the given string and assigns it to the IsOnline field.
func (o *MerchantInfo) SetIsOnline(v string) {
	o.IsOnline = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *MerchantInfo) GetMerchantId() string {
	if o == nil || isNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetMerchantIdOk() (*string, bool) {
	if o == nil || isNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *MerchantInfo) HasMerchantId() bool {
	if o != nil && !isNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *MerchantInfo) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetNickName returns the NickName field value if set, zero value otherwise.
func (o *MerchantInfo) GetNickName() string {
	if o == nil || isNil(o.NickName) {
		var ret string
		return ret
	}
	return *o.NickName
}

// GetNickNameOk returns a tuple with the NickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetNickNameOk() (*string, bool) {
	if o == nil || isNil(o.NickName) {
		return nil, false
	}
	return o.NickName, true
}

// HasNickName returns a boolean if a field has been set.
func (o *MerchantInfo) HasNickName() bool {
	if o != nil && !isNil(o.NickName) {
		return true
	}

	return false
}

// SetNickName gets a reference to the given string and assigns it to the NickName field.
func (o *MerchantInfo) SetNickName(v string) {
	o.NickName = &v
}

// GetRegisterTime returns the RegisterTime field value if set, zero value otherwise.
func (o *MerchantInfo) GetRegisterTime() string {
	if o == nil || isNil(o.RegisterTime) {
		var ret string
		return ret
	}
	return *o.RegisterTime
}

// GetRegisterTimeOk returns a tuple with the RegisterTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetRegisterTimeOk() (*string, bool) {
	if o == nil || isNil(o.RegisterTime) {
		return nil, false
	}
	return o.RegisterTime, true
}

// HasRegisterTime returns a boolean if a field has been set.
func (o *MerchantInfo) HasRegisterTime() bool {
	if o != nil && !isNil(o.RegisterTime) {
		return true
	}

	return false
}

// SetRegisterTime gets a reference to the given string and assigns it to the RegisterTime field.
func (o *MerchantInfo) SetRegisterTime(v string) {
	o.RegisterTime = &v
}

// GetThirtyBuy returns the ThirtyBuy field value if set, zero value otherwise.
func (o *MerchantInfo) GetThirtyBuy() string {
	if o == nil || isNil(o.ThirtyBuy) {
		var ret string
		return ret
	}
	return *o.ThirtyBuy
}

// GetThirtyBuyOk returns a tuple with the ThirtyBuy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetThirtyBuyOk() (*string, bool) {
	if o == nil || isNil(o.ThirtyBuy) {
		return nil, false
	}
	return o.ThirtyBuy, true
}

// HasThirtyBuy returns a boolean if a field has been set.
func (o *MerchantInfo) HasThirtyBuy() bool {
	if o != nil && !isNil(o.ThirtyBuy) {
		return true
	}

	return false
}

// SetThirtyBuy gets a reference to the given string and assigns it to the ThirtyBuy field.
func (o *MerchantInfo) SetThirtyBuy(v string) {
	o.ThirtyBuy = &v
}

// GetThirtyCompletionRate returns the ThirtyCompletionRate field value if set, zero value otherwise.
func (o *MerchantInfo) GetThirtyCompletionRate() string {
	if o == nil || isNil(o.ThirtyCompletionRate) {
		var ret string
		return ret
	}
	return *o.ThirtyCompletionRate
}

// GetThirtyCompletionRateOk returns a tuple with the ThirtyCompletionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetThirtyCompletionRateOk() (*string, bool) {
	if o == nil || isNil(o.ThirtyCompletionRate) {
		return nil, false
	}
	return o.ThirtyCompletionRate, true
}

// HasThirtyCompletionRate returns a boolean if a field has been set.
func (o *MerchantInfo) HasThirtyCompletionRate() bool {
	if o != nil && !isNil(o.ThirtyCompletionRate) {
		return true
	}

	return false
}

// SetThirtyCompletionRate gets a reference to the given string and assigns it to the ThirtyCompletionRate field.
func (o *MerchantInfo) SetThirtyCompletionRate(v string) {
	o.ThirtyCompletionRate = &v
}

// GetThirtySell returns the ThirtySell field value if set, zero value otherwise.
func (o *MerchantInfo) GetThirtySell() string {
	if o == nil || isNil(o.ThirtySell) {
		var ret string
		return ret
	}
	return *o.ThirtySell
}

// GetThirtySellOk returns a tuple with the ThirtySell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetThirtySellOk() (*string, bool) {
	if o == nil || isNil(o.ThirtySell) {
		return nil, false
	}
	return o.ThirtySell, true
}

// HasThirtySell returns a boolean if a field has been set.
func (o *MerchantInfo) HasThirtySell() bool {
	if o != nil && !isNil(o.ThirtySell) {
		return true
	}

	return false
}

// SetThirtySell gets a reference to the given string and assigns it to the ThirtySell field.
func (o *MerchantInfo) SetThirtySell(v string) {
	o.ThirtySell = &v
}

// GetThirtyTrades returns the ThirtyTrades field value if set, zero value otherwise.
func (o *MerchantInfo) GetThirtyTrades() string {
	if o == nil || isNil(o.ThirtyTrades) {
		var ret string
		return ret
	}
	return *o.ThirtyTrades
}

// GetThirtyTradesOk returns a tuple with the ThirtyTrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetThirtyTradesOk() (*string, bool) {
	if o == nil || isNil(o.ThirtyTrades) {
		return nil, false
	}
	return o.ThirtyTrades, true
}

// HasThirtyTrades returns a boolean if a field has been set.
func (o *MerchantInfo) HasThirtyTrades() bool {
	if o != nil && !isNil(o.ThirtyTrades) {
		return true
	}

	return false
}

// SetThirtyTrades gets a reference to the given string and assigns it to the ThirtyTrades field.
func (o *MerchantInfo) SetThirtyTrades(v string) {
	o.ThirtyTrades = &v
}

// GetTotalBuy returns the TotalBuy field value if set, zero value otherwise.
func (o *MerchantInfo) GetTotalBuy() string {
	if o == nil || isNil(o.TotalBuy) {
		var ret string
		return ret
	}
	return *o.TotalBuy
}

// GetTotalBuyOk returns a tuple with the TotalBuy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetTotalBuyOk() (*string, bool) {
	if o == nil || isNil(o.TotalBuy) {
		return nil, false
	}
	return o.TotalBuy, true
}

// HasTotalBuy returns a boolean if a field has been set.
func (o *MerchantInfo) HasTotalBuy() bool {
	if o != nil && !isNil(o.TotalBuy) {
		return true
	}

	return false
}

// SetTotalBuy gets a reference to the given string and assigns it to the TotalBuy field.
func (o *MerchantInfo) SetTotalBuy(v string) {
	o.TotalBuy = &v
}

// GetTotalCompletionRate returns the TotalCompletionRate field value if set, zero value otherwise.
func (o *MerchantInfo) GetTotalCompletionRate() string {
	if o == nil || isNil(o.TotalCompletionRate) {
		var ret string
		return ret
	}
	return *o.TotalCompletionRate
}

// GetTotalCompletionRateOk returns a tuple with the TotalCompletionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetTotalCompletionRateOk() (*string, bool) {
	if o == nil || isNil(o.TotalCompletionRate) {
		return nil, false
	}
	return o.TotalCompletionRate, true
}

// HasTotalCompletionRate returns a boolean if a field has been set.
func (o *MerchantInfo) HasTotalCompletionRate() bool {
	if o != nil && !isNil(o.TotalCompletionRate) {
		return true
	}

	return false
}

// SetTotalCompletionRate gets a reference to the given string and assigns it to the TotalCompletionRate field.
func (o *MerchantInfo) SetTotalCompletionRate(v string) {
	o.TotalCompletionRate = &v
}

// GetTotalSell returns the TotalSell field value if set, zero value otherwise.
func (o *MerchantInfo) GetTotalSell() string {
	if o == nil || isNil(o.TotalSell) {
		var ret string
		return ret
	}
	return *o.TotalSell
}

// GetTotalSellOk returns a tuple with the TotalSell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetTotalSellOk() (*string, bool) {
	if o == nil || isNil(o.TotalSell) {
		return nil, false
	}
	return o.TotalSell, true
}

// HasTotalSell returns a boolean if a field has been set.
func (o *MerchantInfo) HasTotalSell() bool {
	if o != nil && !isNil(o.TotalSell) {
		return true
	}

	return false
}

// SetTotalSell gets a reference to the given string and assigns it to the TotalSell field.
func (o *MerchantInfo) SetTotalSell(v string) {
	o.TotalSell = &v
}

// GetTotalTrades returns the TotalTrades field value if set, zero value otherwise.
func (o *MerchantInfo) GetTotalTrades() string {
	if o == nil || isNil(o.TotalTrades) {
		var ret string
		return ret
	}
	return *o.TotalTrades
}

// GetTotalTradesOk returns a tuple with the TotalTrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantInfo) GetTotalTradesOk() (*string, bool) {
	if o == nil || isNil(o.TotalTrades) {
		return nil, false
	}
	return o.TotalTrades, true
}

// HasTotalTrades returns a boolean if a field has been set.
func (o *MerchantInfo) HasTotalTrades() bool {
	if o != nil && !isNil(o.TotalTrades) {
		return true
	}

	return false
}

// SetTotalTrades gets a reference to the given string and assigns it to the TotalTrades field.
func (o *MerchantInfo) SetTotalTrades(v string) {
	o.TotalTrades = &v
}

func (o MerchantInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AveragePayment) {
		toSerialize["averagePayment"] = o.AveragePayment
	}
	if !isNil(o.AverageRealese) {
		toSerialize["averageRealese"] = o.AverageRealese
	}
	if !isNil(o.IsOnline) {
		toSerialize["isOnline"] = o.IsOnline
	}
	if !isNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	if !isNil(o.NickName) {
		toSerialize["nickName"] = o.NickName
	}
	if !isNil(o.RegisterTime) {
		toSerialize["registerTime"] = o.RegisterTime
	}
	if !isNil(o.ThirtyBuy) {
		toSerialize["thirtyBuy"] = o.ThirtyBuy
	}
	if !isNil(o.ThirtyCompletionRate) {
		toSerialize["thirtyCompletionRate"] = o.ThirtyCompletionRate
	}
	if !isNil(o.ThirtySell) {
		toSerialize["thirtySell"] = o.ThirtySell
	}
	if !isNil(o.ThirtyTrades) {
		toSerialize["thirtyTrades"] = o.ThirtyTrades
	}
	if !isNil(o.TotalBuy) {
		toSerialize["totalBuy"] = o.TotalBuy
	}
	if !isNil(o.TotalCompletionRate) {
		toSerialize["totalCompletionRate"] = o.TotalCompletionRate
	}
	if !isNil(o.TotalSell) {
		toSerialize["totalSell"] = o.TotalSell
	}
	if !isNil(o.TotalTrades) {
		toSerialize["totalTrades"] = o.TotalTrades
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MerchantInfo) UnmarshalJSON(bytes []byte) (err error) {
	varMerchantInfo := _MerchantInfo{}

	if err = json.Unmarshal(bytes, &varMerchantInfo); err == nil {
		*o = MerchantInfo(varMerchantInfo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "averagePayment")
		delete(additionalProperties, "averageRealese")
		delete(additionalProperties, "isOnline")
		delete(additionalProperties, "merchantId")
		delete(additionalProperties, "nickName")
		delete(additionalProperties, "registerTime")
		delete(additionalProperties, "thirtyBuy")
		delete(additionalProperties, "thirtyCompletionRate")
		delete(additionalProperties, "thirtySell")
		delete(additionalProperties, "thirtyTrades")
		delete(additionalProperties, "totalBuy")
		delete(additionalProperties, "totalCompletionRate")
		delete(additionalProperties, "totalSell")
		delete(additionalProperties, "totalTrades")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMerchantInfo struct {
	value *MerchantInfo
	isSet bool
}

func (v NullableMerchantInfo) Get() *MerchantInfo {
	return v.value
}

func (v *NullableMerchantInfo) Set(val *MerchantInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantInfo(val *MerchantInfo) *NullableMerchantInfo {
	return &NullableMerchantInfo{value: val, isSet: true}
}

func (v NullableMerchantInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
