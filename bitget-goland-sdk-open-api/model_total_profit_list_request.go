/*
Bitget Open API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TotalProfitListRequest struct for TotalProfitListRequest
type TotalProfitListRequest struct {
	// pageNo
	PageNo *string `json:"pageNo,omitempty"`
	// pageSize
	PageSize             *string `json:"pageSize,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TotalProfitListRequest TotalProfitListRequest

// NewTotalProfitListRequest instantiates a new TotalProfitListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotalProfitListRequest() *TotalProfitListRequest {
	this := TotalProfitListRequest{}
	return &this
}

// NewTotalProfitListRequestWithDefaults instantiates a new TotalProfitListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotalProfitListRequestWithDefaults() *TotalProfitListRequest {
	this := TotalProfitListRequest{}
	return &this
}

// GetPageNo returns the PageNo field value if set, zero value otherwise.
func (o *TotalProfitListRequest) GetPageNo() string {
	if o == nil || isNil(o.PageNo) {
		var ret string
		return ret
	}
	return *o.PageNo
}

// GetPageNoOk returns a tuple with the PageNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalProfitListRequest) GetPageNoOk() (*string, bool) {
	if o == nil || isNil(o.PageNo) {
		return nil, false
	}
	return o.PageNo, true
}

// HasPageNo returns a boolean if a field has been set.
func (o *TotalProfitListRequest) HasPageNo() bool {
	if o != nil && !isNil(o.PageNo) {
		return true
	}

	return false
}

// SetPageNo gets a reference to the given string and assigns it to the PageNo field.
func (o *TotalProfitListRequest) SetPageNo(v string) {
	o.PageNo = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *TotalProfitListRequest) GetPageSize() string {
	if o == nil || isNil(o.PageSize) {
		var ret string
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalProfitListRequest) GetPageSizeOk() (*string, bool) {
	if o == nil || isNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *TotalProfitListRequest) HasPageSize() bool {
	if o != nil && !isNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given string and assigns it to the PageSize field.
func (o *TotalProfitListRequest) SetPageSize(v string) {
	o.PageSize = &v
}

func (o TotalProfitListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PageNo) {
		toSerialize["pageNo"] = o.PageNo
	}
	if !isNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TotalProfitListRequest) UnmarshalJSON(bytes []byte) (err error) {
	varTotalProfitListRequest := _TotalProfitListRequest{}

	if err = json.Unmarshal(bytes, &varTotalProfitListRequest); err == nil {
		*o = TotalProfitListRequest(varTotalProfitListRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "pageNo")
		delete(additionalProperties, "pageSize")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTotalProfitListRequest struct {
	value *TotalProfitListRequest
	isSet bool
}

func (v NullableTotalProfitListRequest) Get() *TotalProfitListRequest {
	return v.value
}

func (v *NullableTotalProfitListRequest) Set(val *TotalProfitListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTotalProfitListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTotalProfitListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotalProfitListRequest(val *TotalProfitListRequest) *NullableTotalProfitListRequest {
	return &NullableTotalProfitListRequest{value: val, isSet: true}
}

func (v NullableTotalProfitListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotalProfitListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
