# coding: utf-8

"""
    Bitget Open API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from bitget import schemas  # noqa: F401


class TraceSettingProductConfigsResult(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            businessLine = schemas.StrSchema
            maxStopLossRation = schemas.StrSchema
            maxStopProfitRation = schemas.StrSchema
            maxTraceAmount = schemas.StrSchema
            maxTraceAmountSystem = schemas.StrSchema
            maxTraceCount = schemas.StrSchema
            maxTraceRation = schemas.StrSchema
            minStopLossRation = schemas.StrSchema
            minStopProfitRation = schemas.StrSchema
            minTraceAmount = schemas.StrSchema
            minTraceCount = schemas.StrSchema
            minTraceRation = schemas.StrSchema
            sliderMaxStopLossRatio = schemas.StrSchema
            sliderMaxStopProfitRatio = schemas.StrSchema
            symbolId = schemas.StrSchema
            symbolName = schemas.StrSchema
            __annotations__ = {
                "businessLine": businessLine,
                "maxStopLossRation": maxStopLossRation,
                "maxStopProfitRation": maxStopProfitRation,
                "maxTraceAmount": maxTraceAmount,
                "maxTraceAmountSystem": maxTraceAmountSystem,
                "maxTraceCount": maxTraceCount,
                "maxTraceRation": maxTraceRation,
                "minStopLossRation": minStopLossRation,
                "minStopProfitRation": minStopProfitRation,
                "minTraceAmount": minTraceAmount,
                "minTraceCount": minTraceCount,
                "minTraceRation": minTraceRation,
                "sliderMaxStopLossRatio": sliderMaxStopLossRatio,
                "sliderMaxStopProfitRatio": sliderMaxStopProfitRatio,
                "symbolId": symbolId,
                "symbolName": symbolName,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["businessLine"]) -> MetaOapg.properties.businessLine: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxStopLossRation"]) -> MetaOapg.properties.maxStopLossRation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxStopProfitRation"]) -> MetaOapg.properties.maxStopProfitRation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxTraceAmount"]) -> MetaOapg.properties.maxTraceAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxTraceAmountSystem"]) -> MetaOapg.properties.maxTraceAmountSystem: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxTraceCount"]) -> MetaOapg.properties.maxTraceCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxTraceRation"]) -> MetaOapg.properties.maxTraceRation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["minStopLossRation"]) -> MetaOapg.properties.minStopLossRation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["minStopProfitRation"]) -> MetaOapg.properties.minStopProfitRation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["minTraceAmount"]) -> MetaOapg.properties.minTraceAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["minTraceCount"]) -> MetaOapg.properties.minTraceCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["minTraceRation"]) -> MetaOapg.properties.minTraceRation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sliderMaxStopLossRatio"]) -> MetaOapg.properties.sliderMaxStopLossRatio: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sliderMaxStopProfitRatio"]) -> MetaOapg.properties.sliderMaxStopProfitRatio: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["symbolId"]) -> MetaOapg.properties.symbolId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["symbolName"]) -> MetaOapg.properties.symbolName: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["businessLine", "maxStopLossRation", "maxStopProfitRation", "maxTraceAmount", "maxTraceAmountSystem", "maxTraceCount", "maxTraceRation", "minStopLossRation", "minStopProfitRation", "minTraceAmount", "minTraceCount", "minTraceRation", "sliderMaxStopLossRatio", "sliderMaxStopProfitRatio", "symbolId", "symbolName", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["businessLine"]) -> typing.Union[MetaOapg.properties.businessLine, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxStopLossRation"]) -> typing.Union[MetaOapg.properties.maxStopLossRation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxStopProfitRation"]) -> typing.Union[MetaOapg.properties.maxStopProfitRation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxTraceAmount"]) -> typing.Union[MetaOapg.properties.maxTraceAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxTraceAmountSystem"]) -> typing.Union[MetaOapg.properties.maxTraceAmountSystem, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxTraceCount"]) -> typing.Union[MetaOapg.properties.maxTraceCount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxTraceRation"]) -> typing.Union[MetaOapg.properties.maxTraceRation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["minStopLossRation"]) -> typing.Union[MetaOapg.properties.minStopLossRation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["minStopProfitRation"]) -> typing.Union[MetaOapg.properties.minStopProfitRation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["minTraceAmount"]) -> typing.Union[MetaOapg.properties.minTraceAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["minTraceCount"]) -> typing.Union[MetaOapg.properties.minTraceCount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["minTraceRation"]) -> typing.Union[MetaOapg.properties.minTraceRation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sliderMaxStopLossRatio"]) -> typing.Union[MetaOapg.properties.sliderMaxStopLossRatio, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sliderMaxStopProfitRatio"]) -> typing.Union[MetaOapg.properties.sliderMaxStopProfitRatio, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["symbolId"]) -> typing.Union[MetaOapg.properties.symbolId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["symbolName"]) -> typing.Union[MetaOapg.properties.symbolName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["businessLine", "maxStopLossRation", "maxStopProfitRation", "maxTraceAmount", "maxTraceAmountSystem", "maxTraceCount", "maxTraceRation", "minStopLossRation", "minStopProfitRation", "minTraceAmount", "minTraceCount", "minTraceRation", "sliderMaxStopLossRatio", "sliderMaxStopProfitRatio", "symbolId", "symbolName", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        businessLine: typing.Union[MetaOapg.properties.businessLine, str, schemas.Unset] = schemas.unset,
        maxStopLossRation: typing.Union[MetaOapg.properties.maxStopLossRation, str, schemas.Unset] = schemas.unset,
        maxStopProfitRation: typing.Union[MetaOapg.properties.maxStopProfitRation, str, schemas.Unset] = schemas.unset,
        maxTraceAmount: typing.Union[MetaOapg.properties.maxTraceAmount, str, schemas.Unset] = schemas.unset,
        maxTraceAmountSystem: typing.Union[MetaOapg.properties.maxTraceAmountSystem, str, schemas.Unset] = schemas.unset,
        maxTraceCount: typing.Union[MetaOapg.properties.maxTraceCount, str, schemas.Unset] = schemas.unset,
        maxTraceRation: typing.Union[MetaOapg.properties.maxTraceRation, str, schemas.Unset] = schemas.unset,
        minStopLossRation: typing.Union[MetaOapg.properties.minStopLossRation, str, schemas.Unset] = schemas.unset,
        minStopProfitRation: typing.Union[MetaOapg.properties.minStopProfitRation, str, schemas.Unset] = schemas.unset,
        minTraceAmount: typing.Union[MetaOapg.properties.minTraceAmount, str, schemas.Unset] = schemas.unset,
        minTraceCount: typing.Union[MetaOapg.properties.minTraceCount, str, schemas.Unset] = schemas.unset,
        minTraceRation: typing.Union[MetaOapg.properties.minTraceRation, str, schemas.Unset] = schemas.unset,
        sliderMaxStopLossRatio: typing.Union[MetaOapg.properties.sliderMaxStopLossRatio, str, schemas.Unset] = schemas.unset,
        sliderMaxStopProfitRatio: typing.Union[MetaOapg.properties.sliderMaxStopProfitRatio, str, schemas.Unset] = schemas.unset,
        symbolId: typing.Union[MetaOapg.properties.symbolId, str, schemas.Unset] = schemas.unset,
        symbolName: typing.Union[MetaOapg.properties.symbolName, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'TraceSettingProductConfigsResult':
        return super().__new__(
            cls,
            *args,
            businessLine=businessLine,
            maxStopLossRation=maxStopLossRation,
            maxStopProfitRation=maxStopProfitRation,
            maxTraceAmount=maxTraceAmount,
            maxTraceAmountSystem=maxTraceAmountSystem,
            maxTraceCount=maxTraceCount,
            maxTraceRation=maxTraceRation,
            minStopLossRation=minStopLossRation,
            minStopProfitRation=minStopProfitRation,
            minTraceAmount=minTraceAmount,
            minTraceCount=minTraceCount,
            minTraceRation=minTraceRation,
            sliderMaxStopLossRatio=sliderMaxStopLossRatio,
            sliderMaxStopProfitRatio=sliderMaxStopProfitRatio,
            symbolId=symbolId,
            symbolName=symbolName,
            _configuration=_configuration,
            **kwargs,
        )
