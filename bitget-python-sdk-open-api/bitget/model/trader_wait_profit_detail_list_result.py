# coding: utf-8

"""
    Bitget Open API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from bitget import schemas  # noqa: F401


class TraderWaitProfitDetailListResult(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            nextFlag = schemas.BoolSchema
            
            
            class resultList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['TraderWaitProfitDetailResult']:
                        return TraderWaitProfitDetailResult
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['TraderWaitProfitDetailResult'], typing.List['TraderWaitProfitDetailResult']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'resultList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'TraderWaitProfitDetailResult':
                    return super().__getitem__(i)
            __annotations__ = {
                "nextFlag": nextFlag,
                "resultList": resultList,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nextFlag"]) -> MetaOapg.properties.nextFlag: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resultList"]) -> MetaOapg.properties.resultList: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["nextFlag", "resultList", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nextFlag"]) -> typing.Union[MetaOapg.properties.nextFlag, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resultList"]) -> typing.Union[MetaOapg.properties.resultList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["nextFlag", "resultList", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        nextFlag: typing.Union[MetaOapg.properties.nextFlag, bool, schemas.Unset] = schemas.unset,
        resultList: typing.Union[MetaOapg.properties.resultList, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'TraderWaitProfitDetailListResult':
        return super().__new__(
            cls,
            *args,
            nextFlag=nextFlag,
            resultList=resultList,
            _configuration=_configuration,
            **kwargs,
        )

from bitget.model.trader_wait_profit_detail_result import TraderWaitProfitDetailResult
