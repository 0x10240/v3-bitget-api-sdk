# coding: utf-8

"""


    Generated by: https://openapi-generator.tech
"""

import unittest
from unittest.mock import patch

import urllib3

import bitget
from bitget.paths.api_margin_v1_cross_order_cancel_order import post  # noqa: E501
from bitget import configuration, schemas, api_client

from .. import ApiTestMixin


class TestApiMarginV1CrossOrderCancelOrder(ApiTestMixin, unittest.TestCase):
    """
    ApiMarginV1CrossOrderCancelOrder unit test stubs
        cancelOrder  # noqa: E501
    """
    _configuration = configuration.Configuration()

    def setUp(self):
        used_api_client = api_client.ApiClient(configuration=self._configuration)
        self.api = post.ApiForpost(api_client=used_api_client)  # noqa: E501

    def tearDown(self):
        pass

    response_status = 200

    def testApi(self):
        configuration = ApiTestMixin.get_default_configuration()
        # Enter a context with an instance of the API client
        with bitget.ApiClient(configuration) as api_client:
            from bitget.apis.tags import margin_cross_order_api

            api_instance = margin_cross_order_api.MarginCrossPlaceOrder(api_client)
            from bitget.model.margin_order_request import MarginOrderRequest
            req = MarginOrderRequest(
                symbol="BTCUSDT",
                side="buy",
                orderType="limit",
                price="1600",
                timeInForce="gtc",
                baseQuantity="0.625",
                quoteAmount="1000",
                loanType="normal",
            )
            place_response = api_instance.margin_cross_place_order(req)
            print(place_response)
            self.assertIsNotNone(place_response)
            self.assertIsNotNone(place_response.body)
            self.assertEqual(place_response.body['code'], '00000')
            self.assertEqual(place_response.body['msg'], 'success')
            self.assertIsNotNone(place_response.body['data']['orderId'])

            # Create an instance of the API class
            api_instance = margin_cross_order_api.MarginCrossCancelOrder(api_client)
            try:
                from bitget.model.margin_cancel_order_request import MarginCancelOrderRequest
                req = MarginCancelOrderRequest(
                    symbol="BTCUSDT",
                    orderId=place_response.body['data']['orderId']
                )
                api_response = api_instance.margin_cross_cancel_order(req)
                print(api_response)
                self.assertIsNotNone(api_response)
                self.assertIsNotNone(api_response.body)
                self.assertIsNotNone(api_response.body['data']['resultList'])
                self.assertEqual(api_response.body['code'], '00000')
                self.assertEqual(api_response.body['msg'], 'success')
                self.assertEqual(api_response.body['data']['resultList'][0]['orderId'], place_response.body['data']['orderId'])
            except bitget.ApiException as e:
                print("Exception when calling place_order: %s\n" % e)





if __name__ == '__main__':
    unittest.main()
