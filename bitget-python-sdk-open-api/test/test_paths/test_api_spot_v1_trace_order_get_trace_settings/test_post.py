# coding: utf-8

"""


    Generated by: https://openapi-generator.tech
"""

import unittest
from unittest.mock import patch

import urllib3

import bitget
from bitget.paths.api_spot_v1_trace_order_get_trace_settings import post  # noqa: E501
from bitget import configuration, schemas, api_client

from .. import ApiTestMixin


class TestApiSpotV1TraceOrderGetTraceSettings(ApiTestMixin, unittest.TestCase):
    """
    ApiSpotV1TraceOrderGetTraceSettings unit test stubs
        getTraceSettings  # noqa: E501
    """
    _configuration = configuration.Configuration()

    def setUp(self):
        used_api_client = api_client.ApiClient(configuration=self._configuration)
        self.api = post.ApiForpost(api_client=used_api_client)  # noqa: E501

    def tearDown(self):
        pass

    response_status = 200

    def testApi(self):
        configuration = ApiTestMixin.get_default_configuration()
        # Enter a context with an instance of the API client
        with bitget.ApiClient(configuration) as api_client:
            # Create an instance of the API class
            from bitget.apis.tags import spot_trace_order_api
            api_instance = spot_trace_order_api.SpotTraceOrderApi(api_client)
            try:
                from bitget.model.trace_settings_request import TraceSettingsRequest
                req = TraceSettingsRequest(
                    traderUserId='2856507104'
                )
                api_response = api_instance.spot_trace_get_trace_settings(req)
                print(api_response)
                self.assertIsNotNone(api_response)
                self.assertIsNotNone(api_response.body)
                self.assertEqual(api_response.body['code'], '00000')
                self.assertEqual(api_response.body['msg'], 'success')
                self.assertIsNotNone(api_response.body['data']['traceProductConfigs'])
                for item in api_response.body['data']['traceProductConfigs']:
                    print(item)
                    self.assertIsNotNone(item['businessLine'])
                    self.assertIsNotNone(item['minTraceAmount'])
                    self.assertIsNotNone(item['symbolId'])
            except bitget.ApiException as e:
                print("Exception when calling: %s\n" % e)




if __name__ == '__main__':
    unittest.main()
